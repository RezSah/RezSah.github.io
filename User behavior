{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOdfBkOqQcl+ZKjUt5TZu1x",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/RezSah/RezSah.github.io/blob/main/User%20behavior\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Importing Libraries"
      ],
      "metadata": {
        "id": "5_11HcyDamks"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "ZroS2gRfaMZr"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import plotly.express as px\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('user_behavior_dataset.csv')"
      ],
      "metadata": {
        "id": "dbZq_x5oaR-Q"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 239
        },
        "id": "rf32H5IyafEz",
        "outputId": "5d0976d6-584e-4ff3-af5a-588dfd0ec95e"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   User ID    Device Model Operating System  App Usage Time (min/day)  \\\n",
              "0        1  Google Pixel 5          Android                       393   \n",
              "1        2       OnePlus 9          Android                       268   \n",
              "2        3    Xiaomi Mi 11          Android                       154   \n",
              "3        4  Google Pixel 5          Android                       239   \n",
              "4        5       iPhone 12              iOS                       187   \n",
              "\n",
              "   Screen On Time (hours/day)  Battery Drain (mAh/day)  \\\n",
              "0                         6.4                     1872   \n",
              "1                         4.7                     1331   \n",
              "2                         4.0                      761   \n",
              "3                         4.8                     1676   \n",
              "4                         4.3                     1367   \n",
              "\n",
              "   Number of Apps Installed  Data Usage (MB/day)  Age  Gender  \\\n",
              "0                        67                 1122   40    Male   \n",
              "1                        42                  944   47  Female   \n",
              "2                        32                  322   42    Male   \n",
              "3                        56                  871   20    Male   \n",
              "4                        58                  988   31  Female   \n",
              "\n",
              "   User Behavior Class  \n",
              "0                    4  \n",
              "1                    3  \n",
              "2                    2  \n",
              "3                    3  \n",
              "4                    3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ddfd9359-277f-474c-ab4d-ae7fe579212f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>User ID</th>\n",
              "      <th>Device Model</th>\n",
              "      <th>Operating System</th>\n",
              "      <th>App Usage Time (min/day)</th>\n",
              "      <th>Screen On Time (hours/day)</th>\n",
              "      <th>Battery Drain (mAh/day)</th>\n",
              "      <th>Number of Apps Installed</th>\n",
              "      <th>Data Usage (MB/day)</th>\n",
              "      <th>Age</th>\n",
              "      <th>Gender</th>\n",
              "      <th>User Behavior Class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Google Pixel 5</td>\n",
              "      <td>Android</td>\n",
              "      <td>393</td>\n",
              "      <td>6.4</td>\n",
              "      <td>1872</td>\n",
              "      <td>67</td>\n",
              "      <td>1122</td>\n",
              "      <td>40</td>\n",
              "      <td>Male</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>OnePlus 9</td>\n",
              "      <td>Android</td>\n",
              "      <td>268</td>\n",
              "      <td>4.7</td>\n",
              "      <td>1331</td>\n",
              "      <td>42</td>\n",
              "      <td>944</td>\n",
              "      <td>47</td>\n",
              "      <td>Female</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Xiaomi Mi 11</td>\n",
              "      <td>Android</td>\n",
              "      <td>154</td>\n",
              "      <td>4.0</td>\n",
              "      <td>761</td>\n",
              "      <td>32</td>\n",
              "      <td>322</td>\n",
              "      <td>42</td>\n",
              "      <td>Male</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Google Pixel 5</td>\n",
              "      <td>Android</td>\n",
              "      <td>239</td>\n",
              "      <td>4.8</td>\n",
              "      <td>1676</td>\n",
              "      <td>56</td>\n",
              "      <td>871</td>\n",
              "      <td>20</td>\n",
              "      <td>Male</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>iPhone 12</td>\n",
              "      <td>iOS</td>\n",
              "      <td>187</td>\n",
              "      <td>4.3</td>\n",
              "      <td>1367</td>\n",
              "      <td>58</td>\n",
              "      <td>988</td>\n",
              "      <td>31</td>\n",
              "      <td>Female</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ddfd9359-277f-474c-ab4d-ae7fe579212f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ddfd9359-277f-474c-ab4d-ae7fe579212f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ddfd9359-277f-474c-ab4d-ae7fe579212f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cc3b3b62-7611-4229-a0a5-3a1b1c051624\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cc3b3b62-7611-4229-a0a5-3a1b1c051624')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cc3b3b62-7611-4229-a0a5-3a1b1c051624 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 700,\n  \"fields\": [\n    {\n      \"column\": \"User ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202,\n        \"min\": 1,\n        \"max\": 700,\n        \"num_unique_values\": 700,\n        \"samples\": [\n          159,\n          501,\n          397\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"OnePlus 9\",\n          \"Samsung Galaxy S21\",\n          \"Xiaomi Mi 11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Operating System\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"iOS\",\n          \"Android\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"App Usage Time (min/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 177,\n        \"min\": 30,\n        \"max\": 598,\n        \"num_unique_values\": 387,\n        \"samples\": [\n          582,\n          402\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Screen On Time (hours/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.068583910273257,\n        \"min\": 1.0,\n        \"max\": 12.0,\n        \"num_unique_values\": 108,\n        \"samples\": [\n          10.8,\n          1.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Battery Drain (mAh/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 819,\n        \"min\": 302,\n        \"max\": 2993,\n        \"num_unique_values\": 628,\n        \"samples\": [\n          2597,\n          1632\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Apps Installed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26,\n        \"min\": 10,\n        \"max\": 99,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          79,\n          67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data Usage (MB/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 640,\n        \"min\": 102,\n        \"max\": 2497,\n        \"num_unique_values\": 585,\n        \"samples\": [\n          839,\n          765\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 18,\n        \"max\": 59,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          56,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"User Behavior Class\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Data Cleaning and Observations"
      ],
      "metadata": {
        "id": "BoyN-z5Qavo1"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Checking for null values"
      ],
      "metadata": {
        "id": "5Za2orPHansS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 499
        },
        "id": "crajNograywJ",
        "outputId": "ff3f8bcf-41b5-49fc-f835-977ce1af604e"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "User ID                       0\n",
              "Device Model                  0\n",
              "Operating System              0\n",
              "App Usage Time (min/day)      0\n",
              "Screen On Time (hours/day)    0\n",
              "Battery Drain (mAh/day)       0\n",
              "Number of Apps Installed      0\n",
              "Data Usage (MB/day)           0\n",
              "Age                           0\n",
              "Gender                        0\n",
              "User Behavior Class           0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>User ID</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Device Model</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Operating System</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>App Usage Time (min/day)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Screen On Time (hours/day)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Battery Drain (mAh/day)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Number of Apps Installed</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Data Usage (MB/day)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Gender</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>User Behavior Class</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Checking for Duplictes"
      ],
      "metadata": {
        "id": "ezeBCq2IarvK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.duplicated().sum()"
      ],
      "metadata": {
        "id": "zjHTPHdza8Mh",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2b617b95-5de7-4b0f-f9eb-ee70366522cc"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cT9Y_wUma-CO",
        "outputId": "b11c4b6f-6936-4808-e0ab-b9b89c9bef2b"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(700, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Applied df.describe to get a high level statistics of the data"
      ],
      "metadata": {
        "id": "RZi3VobvaxKm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 349
        },
        "id": "kIg4d1Yma_kT",
        "outputId": "0b5f851e-0973-49e6-aff5-14a023572ab8"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         User ID  App Usage Time (min/day)  Screen On Time (hours/day)  \\\n",
              "count  700.00000                700.000000                  700.000000   \n",
              "mean   350.50000                271.128571                    5.272714   \n",
              "std    202.21688                177.199484                    3.068584   \n",
              "min      1.00000                 30.000000                    1.000000   \n",
              "25%    175.75000                113.250000                    2.500000   \n",
              "50%    350.50000                227.500000                    4.900000   \n",
              "75%    525.25000                434.250000                    7.400000   \n",
              "max    700.00000                598.000000                   12.000000   \n",
              "\n",
              "       Battery Drain (mAh/day)  Number of Apps Installed  Data Usage (MB/day)  \\\n",
              "count               700.000000                700.000000           700.000000   \n",
              "mean               1525.158571                 50.681429           929.742857   \n",
              "std                 819.136414                 26.943324           640.451729   \n",
              "min                 302.000000                 10.000000           102.000000   \n",
              "25%                 722.250000                 26.000000           373.000000   \n",
              "50%                1502.500000                 49.000000           823.500000   \n",
              "75%                2229.500000                 74.000000          1341.000000   \n",
              "max                2993.000000                 99.000000          2497.000000   \n",
              "\n",
              "              Age  User Behavior Class  \n",
              "count  700.000000           700.000000  \n",
              "mean    38.482857             2.990000  \n",
              "std     12.012916             1.401476  \n",
              "min     18.000000             1.000000  \n",
              "25%     28.000000             2.000000  \n",
              "50%     38.000000             3.000000  \n",
              "75%     49.000000             4.000000  \n",
              "max     59.000000             5.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d77c0731-ef58-4c1c-9d2d-1a73ebe5d95b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>User ID</th>\n",
              "      <th>App Usage Time (min/day)</th>\n",
              "      <th>Screen On Time (hours/day)</th>\n",
              "      <th>Battery Drain (mAh/day)</th>\n",
              "      <th>Number of Apps Installed</th>\n",
              "      <th>Data Usage (MB/day)</th>\n",
              "      <th>Age</th>\n",
              "      <th>User Behavior Class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>700.00000</td>\n",
              "      <td>700.000000</td>\n",
              "      <td>700.000000</td>\n",
              "      <td>700.000000</td>\n",
              "      <td>700.000000</td>\n",
              "      <td>700.000000</td>\n",
              "      <td>700.000000</td>\n",
              "      <td>700.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>350.50000</td>\n",
              "      <td>271.128571</td>\n",
              "      <td>5.272714</td>\n",
              "      <td>1525.158571</td>\n",
              "      <td>50.681429</td>\n",
              "      <td>929.742857</td>\n",
              "      <td>38.482857</td>\n",
              "      <td>2.990000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>202.21688</td>\n",
              "      <td>177.199484</td>\n",
              "      <td>3.068584</td>\n",
              "      <td>819.136414</td>\n",
              "      <td>26.943324</td>\n",
              "      <td>640.451729</td>\n",
              "      <td>12.012916</td>\n",
              "      <td>1.401476</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.00000</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>302.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>102.000000</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>175.75000</td>\n",
              "      <td>113.250000</td>\n",
              "      <td>2.500000</td>\n",
              "      <td>722.250000</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>373.000000</td>\n",
              "      <td>28.000000</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>350.50000</td>\n",
              "      <td>227.500000</td>\n",
              "      <td>4.900000</td>\n",
              "      <td>1502.500000</td>\n",
              "      <td>49.000000</td>\n",
              "      <td>823.500000</td>\n",
              "      <td>38.000000</td>\n",
              "      <td>3.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>525.25000</td>\n",
              "      <td>434.250000</td>\n",
              "      <td>7.400000</td>\n",
              "      <td>2229.500000</td>\n",
              "      <td>74.000000</td>\n",
              "      <td>1341.000000</td>\n",
              "      <td>49.000000</td>\n",
              "      <td>4.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>700.00000</td>\n",
              "      <td>598.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>2993.000000</td>\n",
              "      <td>99.000000</td>\n",
              "      <td>2497.000000</td>\n",
              "      <td>59.000000</td>\n",
              "      <td>5.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d77c0731-ef58-4c1c-9d2d-1a73ebe5d95b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d77c0731-ef58-4c1c-9d2d-1a73ebe5d95b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d77c0731-ef58-4c1c-9d2d-1a73ebe5d95b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f177746b-2824-48d9-b511-98bf8535828c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f177746b-2824-48d9-b511-98bf8535828c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f177746b-2824-48d9-b511-98bf8535828c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"User ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 251.97866391627107,\n        \"min\": 1.0,\n        \"max\": 700.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          700.0,\n          350.5,\n          525.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"App Usage Time (min/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 236.91767058989325,\n        \"min\": 30.0,\n        \"max\": 700.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          271.12857142857143,\n          227.5,\n          700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Screen On Time (hours/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 245.68540754371344,\n        \"min\": 1.0,\n        \"max\": 700.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.272714285714286,\n          4.9,\n          700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Battery Drain (mAh/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 904.2432531190871,\n        \"min\": 302.0,\n        \"max\": 2993.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1525.1585714285713,\n          1502.5,\n          700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Apps Installed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 232.2817628173073,\n        \"min\": 10.0,\n        \"max\": 700.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          50.68142857142857,\n          49.0,\n          700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data Usage (MB/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 733.6975691630008,\n        \"min\": 102.0,\n        \"max\": 2497.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          929.7428571428571,\n          823.5,\n          700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 235.7425821163052,\n        \"min\": 12.012915932142542,\n        \"max\": 700.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          38.48285714285714,\n          38.0,\n          700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"User Behavior Class\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 246.511486924161,\n        \"min\": 1.0,\n        \"max\": 700.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.99,\n          3.0,\n          700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Detecting Outliers Using IQR Method"
      ],
      "metadata": {
        "id": "7tyCgQHqagwC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def outliers(df, columns):\n",
        "    outliers_dict = {}  # Initialize the dictionary to store outliers for each column\n",
        "    for column in columns:\n",
        "        Q1 = df[column].quantile(0.25)\n",
        "        Q3 = df[column].quantile(0.75)\n",
        "        IQR = Q3 - Q1\n",
        "        lower_limit = Q1 - 1.5 * IQR\n",
        "        upper_limit = Q3 + 1.5 * IQR\n",
        "        Outliers = df[(df[column] < lower_limit) | (df[column] > upper_limit)]\n",
        "        outliers_dict[column] = Outliers  # Store the outliers for the current column\n",
        "    return outliers_dict  # Return the dictionary with outliers after processing all columns\n",
        "outliers_dict = outliers(df,['App Usage Time (min/day)','Screen On Time (hours/day)','Battery Drain (mAh/day)','Number of Apps Installed',\n",
        "                             'Data Usage (MB/day)','Age','User Behavior Class'])\n",
        "\n"
      ],
      "metadata": {
        "id": "bQivxO9rn2jy"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "outliers_dict"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2zsL_xh4m8wi",
        "outputId": "e483886e-8080-44e8-b2cc-0c7837b721dd"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'App Usage Time (min/day)': Empty DataFrame\n",
              " Columns: [User ID, Device Model, Operating System, App Usage Time (min/day), Screen On Time (hours/day), Battery Drain (mAh/day), Number of Apps Installed, Data Usage (MB/day), Age, Gender, User Behavior Class]\n",
              " Index: [],\n",
              " 'Screen On Time (hours/day)': Empty DataFrame\n",
              " Columns: [User ID, Device Model, Operating System, App Usage Time (min/day), Screen On Time (hours/day), Battery Drain (mAh/day), Number of Apps Installed, Data Usage (MB/day), Age, Gender, User Behavior Class]\n",
              " Index: [],\n",
              " 'Battery Drain (mAh/day)': Empty DataFrame\n",
              " Columns: [User ID, Device Model, Operating System, App Usage Time (min/day), Screen On Time (hours/day), Battery Drain (mAh/day), Number of Apps Installed, Data Usage (MB/day), Age, Gender, User Behavior Class]\n",
              " Index: [],\n",
              " 'Number of Apps Installed': Empty DataFrame\n",
              " Columns: [User ID, Device Model, Operating System, App Usage Time (min/day), Screen On Time (hours/day), Battery Drain (mAh/day), Number of Apps Installed, Data Usage (MB/day), Age, Gender, User Behavior Class]\n",
              " Index: [],\n",
              " 'Data Usage (MB/day)': Empty DataFrame\n",
              " Columns: [User ID, Device Model, Operating System, App Usage Time (min/day), Screen On Time (hours/day), Battery Drain (mAh/day), Number of Apps Installed, Data Usage (MB/day), Age, Gender, User Behavior Class]\n",
              " Index: [],\n",
              " 'Age': Empty DataFrame\n",
              " Columns: [User ID, Device Model, Operating System, App Usage Time (min/day), Screen On Time (hours/day), Battery Drain (mAh/day), Number of Apps Installed, Data Usage (MB/day), Age, Gender, User Behavior Class]\n",
              " Index: [],\n",
              " 'User Behavior Class': Empty DataFrame\n",
              " Columns: [User ID, Device Model, Operating System, App Usage Time (min/day), Screen On Time (hours/day), Battery Drain (mAh/day), Number of Apps Installed, Data Usage (MB/day), Age, Gender, User Behavior Class]\n",
              " Index: []}"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **By running a test to identify the outliers in the dataset, we saw that the data does not contain outliers.**"
      ],
      "metadata": {
        "id": "IY_lPLptqf7W"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Exploratory Data Analysis"
      ],
      "metadata": {
        "id": "tTIHYfFDbFOa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['Age'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Up_MkdRVbRXK",
        "outputId": "085248bb-df6b-42d8-a5ee-96c318d3e9fe"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([40, 47, 42, 20, 31, 21, 34, 24, 57, 43, 49, 39, 44, 26, 29, 45, 23,\n",
              "       37, 58, 52, 33, 55, 19, 25, 38, 56, 18, 22, 27, 54, 53, 30, 28, 50,\n",
              "       51, 41, 32, 35, 36, 59, 48, 46])"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Age_Category'] = df['Age'].apply(lambda x: 'Young Adult' if x<30 else 'Adult' if 30<=x<=39 else 'Middle_Aged' if 40<=x<=49 else 'Senior')"
      ],
      "metadata": {
        "id": "bnPdwqZmbR_u"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['Screen On Time (hours/day)'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qmTn0M_EbUZV",
        "outputId": "bc396f95-d7b7-45cd-83d5-ad136d6a865e"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 6.4,  4.7,  4. ,  4.8,  4.3,  2. ,  7.3, 11.4,  7.7,  6.6,  1.4,\n",
              "        5.5,  6.2,  4.9,  5.4, 10.4,  3.6,  5.8,  8.5,  2.6, 11.6,  6.5,\n",
              "        5.6,  3.4,  7.6, 10.5,  6.8,  6. ,  4.6, 10.2,  1.2,  3.3, 11.2,\n",
              "       10.1,  2.1,  3.7,  2.4, 10.9,  8.4,  8.2,  8.7,  7.4,  5.9,  2.7,\n",
              "        2.2,  1.6,  1.1,  7. ,  7.1, 11.9,  7.5,  1.9, 11.5,  4.5,  1.7,\n",
              "        7.2,  9. ,  6.3,  5.7,  2.5,  1.8, 10.6,  2.8,  1.5,  4.1,  9.5,\n",
              "       12. ,  4.2,  3.8,  8.6,  5.1,  3.2,  7.9,  5.2, 10. ,  8.1, 11.8,\n",
              "       10.8,  1. , 11.3,  9.7, 11.1,  5.3,  9.4,  7.8,  9.2, 10.7,  4.4,\n",
              "        8.9,  1.3,  3.1,  9.3,  6.1,  6.9,  9.6,  2.3, 11.7,  3.5,  5. ,\n",
              "        2.9,  3. ,  8.3,  9.8, 10.3,  3.9,  8.8,  9.1,  6.7])"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Add a new column called Age_Category\n",
        "df['Screen_Time'] = df['Screen On Time (hours/day)'].apply(lambda x: 'Very Low' if 1<=x<=2.9 else 'Low' if  3.<=x<=4.9 else 'Moderate'\n",
        "                                                          if 5.<=x<=6.9 else 'High' if 7.<=x<=8.9 else 'Very High')"
      ],
      "metadata": {
        "id": "tD0TnXRBbWCn"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Set the figure size\n",
        "plt.figure(figsize=(16, 12))\n",
        "# Set the bar plot\n",
        "fig = px.bar(df, x='Age_Category', y='Screen On Time (hours/day)',\n",
        "             title = 'Screen time for different age categories split by gender',\n",
        "             color = 'Gender',barmode='group')\n",
        "fig.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 562
        },
        "id": "nn46ItbcbYG0",
        "outputId": "175f20a8-dfec-49e1-b24c-2b18947a3bfc"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"fa2834dd-b634-480c-a380-9cc95ec40d14\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"fa2834dd-b634-480c-a380-9cc95ec40d14\")) {                    Plotly.newPlot(                        \"fa2834dd-b634-480c-a380-9cc95ec40d14\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Gender=Male\\u003cbr\\u003eAge_Category=%{x}\\u003cbr\\u003eScreen On Time (hours\\u002fday)=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Male\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Male\",\"offsetgroup\":\"Male\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Adult\",\"Adult\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Senior\",\"Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Adult\",\"Senior\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Adult\",\"Adult\",\"Adult\",\"Senior\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Senior\",\"Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Adult\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Senior\",\"Senior\",\"Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Senior\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Senior\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Senior\",\"Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Senior\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Adult\",\"Adult\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Senior\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\"],\"xaxis\":\"x\",\"y\":[6.4,4.0,4.8,2.0,11.4,6.6,5.5,4.9,4.0,3.4,7.6,10.5,4.6,4.7,2.0,3.3,11.2,6.4,6.2,10.1,2.1,3.7,10.9,8.2,8.7,5.9,2.2,1.6,8.4,7.0,7.1,1.9,7.0,4.0,4.5,10.2,9.0,6.3,2.0,2.8,1.8,7.4,2.4,1.5,6.2,2.5,7.5,7.2,9.5,1.1,4.1,4.2,2.8,1.2,2.7,8.6,3.2,3.2,1.2,2.7,8.1,5.1,11.8,2.5,10.8,1.0,1.6,1.7,9.7,11.1,6.3,1.1,5.3,7.4,1.6,4.2,3.7,9.4,3.4,1.7,7.8,6.5,2.4,1.9,7.7,2.0,11.3,1.5,11.8,3.7,1.1,5.4,5.7,11.9,2.4,6.4,10.7,1.1,2.2,1.9,4.1,4.4,1.6,1.3,1.6,3.3,6.5,3.1,9.3,10.9,3.4,1.1,8.4,6.9,9.5,3.2,6.8,2.0,2.5,7.0,3.8,7.3,2.3,8.9,10.0,3.8,1.7,3.5,6.5,1.3,5.0,1.5,6.2,10.5,7.7,4.0,1.7,8.4,9.4,4.7,6.6,4.2,2.3,2.6,11.9,4.4,1.6,1.7,7.7,6.9,10.8,3.7,1.2,7.6,1.6,8.5,1.8,5.2,6.5,2.8,5.0,6.8,2.9,4.9,11.3,7.5,6.0,6.0,7.9,1.3,6.1,1.2,1.0,10.5,5.8,1.4,3.8,7.4,6.9,1.9,11.8,10.4,7.9,8.6,7.2,2.4,10.6,1.3,1.1,10.8,3.0,4.6,10.4,2.9,3.0,2.0,1.3,7.9,6.1,3.5,7.4,6.8,11.6,1.5,11.1,2.7,7.4,6.9,8.2,5.0,2.3,1.4,1.4,3.2,5.0,2.8,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,4.4,1.7,3.9,5.7,1.1,8.8,7.2,8.8,5.2,3.5,11.8,3.3,1.3,3.9,4.7,2.4,3.3,5.9,4.6,7.3,7.5,1.9,4.6,5.0,4.8,2.4,10.4,11.1,1.1,9.3,6.1,6.8,10.9,4.5,1.3,5.8,8.5,5.1,5.9,10.0,10.8,1.6,7.1,2.2,3.8,1.2,2.2,6.5,1.1,11.2,4.5,3.0,7.9,6.1,5.9,10.5,5.4,5.5,6.6,6.2,3.8,4.2,7.6,11.6,2.1,1.6,4.4,1.3,1.7,6.6,7.1,9.1,3.5,1.1,2.7,3.1,6.1,7.5,3.7,6.3,10.5,10.8,2.5,3.0,1.2,3.0,4.0,8.5,9.6,1.3,10.2,4.0,3.7,4.2,1.8,1.8,1.5,5.2,1.2,6.3,3.1,6.6,10.7,1.8,8.2,3.3,6.3,2.0,5.2,1.2,10.5,3.7,9.6,1.5,3.1,3.2,10.3,5.4,11.4,5.5,2.4,1.6,7.3,11.2,1.6,1.5,3.8,7.6,5.5,1.6,4.0,6.6,7.7,6.3,9.5,5.7,8.6,3.9,6.8,1.7],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Gender=Female\\u003cbr\\u003eAge_Category=%{x}\\u003cbr\\u003eScreen On Time (hours\\u002fday)=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Female\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Female\",\"offsetgroup\":\"Female\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Senior\",\"Young Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Senior\",\"Adult\",\"Senior\",\"Adult\",\"Senior\",\"Young Adult\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Senior\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Adult\",\"Adult\",\"Adult\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Senior\",\"Senior\",\"Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Senior\",\"Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Adult\",\"Senior\",\"Senior\",\"Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Senior\",\"Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Senior\",\"Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Adult\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Young Adult\"],\"xaxis\":\"x\",\"y\":[4.7,4.3,7.3,7.7,1.4,6.2,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,6.8,6.2,6.0,10.2,1.2,4.7,2.4,8.4,3.6,7.4,2.7,8.7,1.1,11.9,7.5,11.5,4.0,1.7,7.2,1.1,5.7,2.0,2.5,1.8,5.7,10.6,7.2,4.5,3.3,2.1,4.1,1.4,12.0,1.2,5.5,2.5,1.4,5.5,6.0,3.8,5.1,7.9,5.2,1.6,6.6,8.7,10.0,7.4,4.2,3.3,7.2,3.6,11.3,4.5,5.2,2.2,11.2,1.6,2.0,7.5,1.5,1.6,4.8,8.4,5.4,2.8,6.6,1.6,5.2,5.7,9.2,1.2,10.4,7.8,2.0,1.1,7.2,6.4,4.7,3.7,2.8,8.9,3.7,1.7,4.6,6.1,3.3,9.6,6.1,10.7,10.8,5.2,3.4,1.4,8.9,6.9,10.8,1.7,11.7,4.0,1.9,1.4,7.9,2.4,1.2,7.0,5.0,9.0,1.3,6.6,9.6,6.8,4.1,6.5,2.2,5.9,7.8,1.7,1.3,7.4,4.0,1.8,4.5,6.6,2.7,3.3,4.4,6.0,11.4,2.9,7.5,5.1,4.2,7.2,3.0,2.0,4.3,2.2,6.6,4.4,6.0,6.3,1.3,4.3,2.0,1.6,8.3,4.6,3.8,7.5,1.5,9.8,10.3,6.0,7.7,3.3,1.5,4.6,7.5,1.4,4.1,9.5,2.0,4.6,1.5,11.6,11.2,3.9,9.8,10.9,11.3,1.7,6.0,1.5,6.6,11.6,2.8,9.2,1.1,1.6,8.6,8.2,7.3,3.2,7.3,7.8,11.8,5.1,2.0,5.1,11.7,4.9,6.1,1.1,2.4,3.4,3.0,5.7,4.0,3.0,1.2,1.6,1.6,1.0,9.0,1.3,4.8,4.0,9.4,3.0,4.9,6.2,6.6,4.2,4.3,1.6,6.0,3.8,4.4,7.3,3.7,1.5,2.5,4.8,2.9,3.6,7.7,8.4,6.6,2.0,5.3,3.4,8.5,6.5,5.2,2.4,1.2,4.8,11.8,6.4,4.7,3.3,11.1,9.5,9.4,2.5,9.7,2.0,4.6,2.6,4.0,2.5,7.3,6.6,4.9,3.5,6.2,1.4,3.9,5.3,6.1,5.9,10.9,10.3,7.5,6.0,10.0,5.7,1.9,1.3,4.4,3.6,11.5,7.7,4.2,4.3,6.0,2.1,5.3,6.0,10.4,4.9,1.1,5.4,5.6,7.0,5.0,7.4,1.8,5.0,5.1,10.2,3.2,3.4,1.1,6.2,9.8,1.4,4.8,2.9,1.3,1.5,5.4,1.7,5.6,5.3,6.8,6.4,3.2,11.4,3.5,4.6,1.8,6.1,4.9,4.0,6.7,9.7,3.1,5.4],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Age_Category\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Screen On Time (hours\\u002fday)\"}},\"legend\":{\"title\":{\"text\":\"Gender\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Screen time for different age categories split by gender\"},\"barmode\":\"group\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('fa2834dd-b634-480c-a380-9cc95ec40d14');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1600x1200 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig = px.violin(df, y='App Usage Time (min/day)', x='Age_Category', box = True, color = 'Gender',\n",
        "                title = 'Violin plots showing the app usage time per day accross every age category split by gender')\n",
        "\n",
        "fig.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "rkd-7-0HhwA0",
        "outputId": "28782aaf-917a-4fed-d703-0f9a949e79df"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"e47cd7b7-6d94-466b-8834-7f77b74b12bc\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"e47cd7b7-6d94-466b-8834-7f77b74b12bc\")) {                    Plotly.newPlot(                        \"e47cd7b7-6d94-466b-8834-7f77b74b12bc\",                        [{\"alignmentgroup\":\"True\",\"box\":{\"visible\":true},\"hovertemplate\":\"Gender=Male\\u003cbr\\u003eAge_Category=%{x}\\u003cbr\\u003eApp Usage Time (min\\u002fday)=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Male\",\"marker\":{\"color\":\"#636efa\"},\"name\":\"Male\",\"offsetgroup\":\"Male\",\"orientation\":\"v\",\"scalegroup\":\"True\",\"showlegend\":true,\"x\":[\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Adult\",\"Adult\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Senior\",\"Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Adult\",\"Senior\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Adult\",\"Adult\",\"Adult\",\"Senior\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Senior\",\"Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Adult\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Senior\",\"Senior\",\"Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Senior\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Senior\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Senior\",\"Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Senior\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Adult\",\"Adult\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Senior\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\"],\"x0\":\" \",\"xaxis\":\"x\",\"y\":[393,154,239,99,543,424,215,215,216,91,444,512,197,278,46,122,522,473,398,576,120,152,502,580,589,245,97,68,539,428,325,79,459,225,257,516,521,457,47,172,39,404,151,34,301,134,411,326,550,41,183,274,166,66,152,488,136,121,75,97,529,227,535,125,540,79,83,66,497,516,448,68,188,443,52,228,149,523,158,86,339,304,131,53,442,32,595,35,587,92,46,255,207,539,151,474,498,75,134,79,262,215,80,88,69,100,301,163,539,481,133,41,553,402,555,101,433,133,92,384,132,360,159,495,537,132,64,162,451,30,202,71,314,523,424,201,70,563,584,208,381,284,179,122,501,230,85,73,386,411,534,121,84,448,55,580,65,264,420,106,243,397,132,281,508,445,199,191,473,30,306,64,75,529,256,62,156,303,463,30,517,557,321,579,382,165,561,69,44,525,106,188,493,104,102,98,72,311,337,168,331,472,517,49,522,97,411,405,575,270,98,83,32,168,201,130,105,94,540,266,140,534,46,581,221,41,123,223,66,555,378,546,234,179,591,120,88,143,234,174,123,216,290,414,429,39,248,289,189,155,528,549,80,586,416,329,493,274,66,200,493,238,267,492,567,36,466,126,120,64,119,350,69,506,224,175,339,389,289,567,242,275,383,455,173,198,361,553,121,46,290,60,86,404,441,537,94,47,148,149,328,424,159,447,512,511,140,114,83,122,203,551,507,57,553,106,119,292,64,42,36,227,47,461,94,318,510,63,502,105,389,149,206,49,594,104,505,50,138,130,555,198,529,205,170,81,468,500,37,81,141,380,190,75,218,412,335,387,541,195,505,92,316,62],\"y0\":\" \",\"yaxis\":\"y\",\"type\":\"violin\"},{\"alignmentgroup\":\"True\",\"box\":{\"visible\":true},\"hovertemplate\":\"Gender=Female\\u003cbr\\u003eAge_Category=%{x}\\u003cbr\\u003eApp Usage Time (min\\u002fday)=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Female\",\"marker\":{\"color\":\"#EF553B\"},\"name\":\"Female\",\"offsetgroup\":\"Female\",\"orientation\":\"v\",\"scalegroup\":\"True\",\"showlegend\":true,\"x\":[\"Middle_Aged\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Senior\",\"Young Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Senior\",\"Adult\",\"Senior\",\"Adult\",\"Senior\",\"Young Adult\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Senior\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Adult\",\"Adult\",\"Adult\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Senior\",\"Senior\",\"Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Senior\",\"Adult\",\"Senior\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Adult\",\"Senior\",\"Senior\",\"Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Senior\",\"Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Senior\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Senior\",\"Adult\",\"Senior\",\"Adult\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Adult\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Young Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Adult\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Middle_Aged\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Middle_Aged\",\"Senior\",\"Senior\",\"Adult\",\"Middle_Aged\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Middle_Aged\",\"Adult\",\"Adult\",\"Adult\",\"Young Adult\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Middle_Aged\",\"Senior\",\"Young Adult\",\"Young Adult\",\"Senior\",\"Adult\",\"Adult\",\"Young Adult\",\"Senior\",\"Senior\",\"Middle_Aged\",\"Adult\",\"Senior\",\"Young Adult\"],\"x0\":\" \",\"xaxis\":\"x\",\"y\":[268,187,350,340,53,462,189,503,132,299,81,577,93,576,423,292,452,412,260,593,32,240,138,558,138,452,125,516,64,522,309,545,134,82,452,31,229,34,173,78,230,565,330,223,137,116,291,84,516,59,225,174,54,187,216,95,295,471,220,82,388,529,584,332,252,97,320,176,555,237,219,156,524,42,120,329,68,64,278,540,225,153,368,51,279,193,544,73,597,402,130,42,432,473,202,151,126,495,127,78,278,451,152,499,351,532,511,193,129,37,524,425,573,45,564,168,75,42,441,100,52,397,272,570,64,334,518,334,181,426,105,269,411,39,49,314,211,59,226,458,170,122,267,469,541,155,410,285,230,341,130,74,299,116,408,227,274,347,76,203,48,88,541,233,176,461,37,531,597,290,308,156,60,225,379,53,291,488,74,230,78,516,598,102,558,511,560,65,458,84,349,563,119,589,78,41,566,559,478,147,395,357,501,257,116,264,572,202,416,46,98,105,105,260,231,152,34,74,74,56,523,68,265,238,541,139,210,412,318,258,258,78,444,131,228,416,152,87,107,182,102,143,420,582,348,33,241,110,574,438,272,99,44,228,589,431,190,139,593,576,592,170,544,50,236,139,172,157,405,387,201,142,408,71,116,291,444,211,519,554,381,257,527,191,71,73,197,111,580,379,217,192,325,138,182,425,580,258,49,288,225,342,218,453,55,210,216,496,138,96,83,417,538,50,186,174,89,66,186,69,262,278,463,469,160,522,115,298,33,307,261,178,378,564,99,212],\"y0\":\" \",\"yaxis\":\"y\",\"type\":\"violin\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Age_Category\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"App Usage Time (min\\u002fday)\"}},\"legend\":{\"title\":{\"text\":\"Gender\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Violin plots showing the app usage time per day accross every age category split by gender\"},\"violinmode\":\"group\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('e47cd7b7-6d94-466b-8834-7f77b74b12bc');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import plotly.graph_objects as go\n",
        "\n",
        "fig = go.Figure()\n",
        "columns_to_plot = ['App Usage Time (min/day)','Screen On Time (hours/day)','Battery Drain (mAh/day)','Data Usage (MB/day)']\n",
        "for col in df:\n",
        "  for col in columns_to_plot:\n",
        "    fig.add_trace(go.Box(y=df[col], name=col))\n",
        "    fig.update_layout(title=\"Boxplot Showing Distribution of Key Usage Metrics\")\n",
        "\n",
        "\n",
        "fig.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "IQIi8szyeDK-",
        "outputId": "16020092-d1d8-4b1a-84ee-5709e18059aa"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"1d87127f-c345-46d9-928e-c65b3e9eb099\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"1d87127f-c345-46d9-928e-c65b3e9eb099\")) {                    Plotly.newPlot(                        \"1d87127f-c345-46d9-928e-c65b3e9eb099\",                        [{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"},{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"},{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"},{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"},{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"},{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"},{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"},{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"},{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"},{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"},{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"},{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"},{\"name\":\"App Usage Time (min\\u002fday)\",\"y\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"type\":\"box\"},{\"name\":\"Screen On Time (hours\\u002fday)\",\"y\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"type\":\"box\"},{\"name\":\"Battery Drain (mAh\\u002fday)\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"type\":\"box\"},{\"name\":\"Data Usage (MB\\u002fday)\",\"y\":[1122,944,322,871,988,564,1054,1702,1053,1301,162,641,1099,857,779,2025,344,985,297,2192,302,1553,1372,949,748,451,1002,1599,1456,1384,889,975,917,105,1616,153,573,2328,1400,1180,708,2323,392,429,572,1935,1594,323,2262,1997,1417,885,393,375,2189,111,161,2415,1144,1053,1663,1253,128,1717,1091,917,912,449,1547,284,1090,1701,1082,208,125,985,122,301,138,989,1603,549,1133,105,695,1352,392,276,348,1303,307,827,284,367,1083,1454,1946,1968,293,875,136,738,565,934,360,264,596,278,711,889,459,2344,748,404,1324,596,281,909,124,428,1150,2189,2391,1924,714,2378,1321,667,465,412,1886,1226,458,139,285,1856,216,868,2076,1796,655,1337,429,201,2069,974,1026,234,823,459,1539,207,396,1185,102,493,136,1062,1493,305,262,112,1440,139,851,1540,2366,158,791,1894,524,208,578,1406,113,629,826,972,692,2007,571,1079,2416,275,1564,1995,1088,185,589,265,423,161,1127,997,1300,659,991,320,197,431,2252,314,262,146,433,1421,207,419,1990,823,1434,2017,445,246,461,2471,1397,1565,1805,417,1300,417,1290,2148,563,2438,1376,626,368,1164,526,2150,1763,580,529,295,1730,1130,107,2118,191,2133,338,1341,253,844,257,1066,581,230,272,1477,1787,478,172,1101,1116,686,914,2497,151,1227,2125,109,1079,1508,752,2151,861,1450,1266,888,453,588,568,1738,629,878,122,1136,163,268,1209,169,1024,1538,1376,811,473,146,1047,149,208,649,1795,130,1163,344,778,499,1314,971,1086,1923,322,594,877,1213,666,1167,868,1055,563,308,632,103,953,434,1076,2481,984,666,1456,156,1115,638,881,127,274,1820,796,362,904,1324,246,1632,1472,252,1449,155,223,1863,1683,645,840,1431,447,266,510,1387,1463,281,954,1075,106,287,905,1986,253,845,2208,1609,259,1499,1935,1341,1767,2477,408,503,1548,1823,2335,1663,164,232,122,1072,1623,313,653,1813,299,322,548,1096,457,199,2191,313,1021,1359,313,1459,1774,1356,143,2175,221,203,1891,508,1264,1657,2102,1017,567,1049,1242,1434,2074,1928,769,957,573,394,737,2481,964,228,198,414,1041,167,709,579,403,489,369,2180,839,506,1702,116,2304,467,862,291,343,468,920,751,218,724,2402,1318,1641,919,306,170,466,1903,583,164,398,182,275,871,142,545,1561,438,987,809,281,723,1092,661,1102,294,883,1811,513,687,765,1085,1126,762,718,795,441,2140,1814,230,1093,298,330,804,1333,2332,1096,507,198,1383,545,2116,807,362,869,504,195,1187,2493,965,2450,1415,941,173,791,1968,976,1682,249,507,1461,599,535,218,1809,371,1485,250,1125,2460,792,665,318,131,338,796,2479,1191,1200,915,1383,573,915,2258,2281,1701,2194,537,642,656,1727,182,971,358,1360,508,1287,373,583,1162,1246,972,370,640,1056,1860,1103,578,265,265,910,296,498,227,700,1327,1421,1194,864,2158,2163,446,1606,1291,916,122,1737,416,991,117,175,563,608,1101,1228,464,575,2341,1050,677,1441,1694,2387,347,596,905,1296,284,373,424,885,1150,2441,787,937,1901,1543,131,2441,153,493,461,767,965,1077,867,972,274,1046,284,272,196,679,920,234,1004,489,977,1921,366,1253,401,1729,289,1135,2080,271,255,1553,566,949,345,201,283,1334,790,356,167,694,144,1647,493,628,894,1236,2375,146,545,448,1297,2003,635,1845,729,334,339,224,1209,2438,216,1768,159,576,495,814,113,1111,1191,815,225,822,1393,1007,1178,824,1550,679,569,1455,1709,1985,381,1201,457,224,828],\"type\":\"box\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Boxplot Showing Distribution of Key Usage Metrics\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('1d87127f-c345-46d9-928e-c65b3e9eb099');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1= df.groupby('Operating System')['User ID'].nunique().reset_index()\n",
        "df1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 128
        },
        "id": "yxYeRkLDbjj1",
        "outputId": "7e071c1a-d26b-435b-8c35-5a3c5edf7e5b"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Operating System  User ID\n",
              "0          Android      554\n",
              "1              iOS      146"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d2bf84e7-80c2-4493-b088-247f98146e3b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Operating System</th>\n",
              "      <th>User ID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Android</td>\n",
              "      <td>554</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>iOS</td>\n",
              "      <td>146</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d2bf84e7-80c2-4493-b088-247f98146e3b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d2bf84e7-80c2-4493-b088-247f98146e3b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d2bf84e7-80c2-4493-b088-247f98146e3b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-87f67f71-cc41-4b08-a66e-9cceb778d72d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-87f67f71-cc41-4b08-a66e-9cceb778d72d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-87f67f71-cc41-4b08-a66e-9cceb778d72d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df1",
              "summary": "{\n  \"name\": \"df1\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Operating System\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"iOS\",\n          \"Android\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"User ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288,\n        \"min\": 146,\n        \"max\": 554,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          146,\n          554\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.barplot(data=df1, x='Operating System', y='User ID', palette = 'Blues')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 589
        },
        "id": "QbM7YjmPbsoA",
        "outputId": "ee3c878e-7fea-4044-e7c2-6c3ea82b8fe9"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-18-454bc7d72655>:1: FutureWarning:\n",
            "\n",
            "\n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAjsAAAGwCAYAAABPSaTdAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAtrUlEQVR4nO3de1RVdcL/8Q8XQbmcI6CC5I0sL6RhWenJroqhg6ZJZT6OYVE9GToa5ZQ/TcvGbCi1mjKzTOwZy7LRJmnUEG8tBU1SMyPMxh5o8IBagthwEfbvj5ZnOo9akOA5fn2/1jprcfb+7r2/mxbybp99Dj6WZVkCAAAwlK+nJwAAANCUiB0AAGA0YgcAABiN2AEAAEYjdgAAgNGIHQAAYDRiBwAAGM3f0xPwBnV1dSouLlZoaKh8fHw8PR0AAFAPlmXp2LFjio6Olq/vma/fEDuSiouL1b59e09PAwAA/AZFRUVq167dGdcTO5JCQ0Ml/fTNstlsHp4NAACoj/LycrVv3971e/xMiB3J9dKVzWYjdgAAOM/82i0o3KAMAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBo/p6ewIUic+cBT08B8EpDrojx9BQAGI4rOwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaB6NnSeffFI+Pj5uj27durnWV1ZWKjU1VREREQoJCVFSUpJKSkrc9lFYWKjExEQFBQWpTZs2mjx5sk6cOHGuTwUAAHgpf09P4LLLLtO6detcz/39/zOlhx9+WB999JGWL18uu92u8ePHa8SIEdqyZYskqba2VomJiYqKitLWrVt18OBB3X333WrWrJmeeeaZc34uAADA+3g8dvz9/RUVFXXK8rKyMi1atEhvv/22+vfvL0lavHixunfvrtzcXPXt21cff/yxvvzyS61bt06RkZHq1auXnn76aT322GN68sknFRAQcK5PBwAAeBmP37Pz9ddfKzo6WhdffLFGjx6twsJCSVJeXp5qamoUHx/vGtutWzd16NBBOTk5kqScnBz17NlTkZGRrjEJCQkqLy/X3r17z3jMqqoqlZeXuz0AAICZPBo7ffr0UUZGhtasWaNXX31VBw4c0PXXX69jx47J6XQqICBALVu2dNsmMjJSTqdTkuR0Ot1C5+T6k+vOZPbs2bLb7a5H+/btG/fEAACA1/Doy1iDBw92fX355ZerT58+6tixo9577z21aNGiyY47ZcoUpaWluZ6Xl5cTPAAAGMrjL2P9XMuWLdWlSxft379fUVFRqq6u1tGjR93GlJSUuO7xiYqKOuXdWSefn+4+oJMCAwNls9ncHgAAwExeFTsVFRX65ptv1LZtW/Xu3VvNmjVTdna2a31BQYEKCwvlcDgkSQ6HQ3v27FFpaalrTFZWlmw2m2JjY8/5/AEAgPfx6MtYjz76qIYOHaqOHTuquLhYM2bMkJ+fn0aNGiW73a6UlBSlpaUpPDxcNptNEyZMkMPhUN++fSVJt9xyi2JjYzVmzBilp6fL6XRq2rRpSk1NVWBgoCdPDQAAeAmPxs53332nUaNG6ciRI2rdurWuu+465ebmqnXr1pKkefPmydfXV0lJSaqqqlJCQoLmz5/v2t7Pz0+ZmZkaN26cHA6HgoODlZycrJkzZ3rqlAAAgJfxsSzL8vQkPK28vFx2u11lZWVNdv9O5s4DTbJf4Hw35IoYT08BwHmqvr+/veqeHQAAgMZG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjOY1sfPss8/Kx8dHkyZNci2rrKxUamqqIiIiFBISoqSkJJWUlLhtV1hYqMTERAUFBalNmzaaPHmyTpw4cY5nDwAAvJVXxM6nn36q1157TZdffrnb8ocfflirVq3S8uXLtWnTJhUXF2vEiBGu9bW1tUpMTFR1dbW2bt2qJUuWKCMjQ9OnTz/XpwAAALyUx2OnoqJCo0eP1uuvv66wsDDX8rKyMi1atEhz585V//791bt3by1evFhbt25Vbm6uJOnjjz/Wl19+qb/+9a/q1auXBg8erKefflqvvPKKqqurPXVKAADAi3g8dlJTU5WYmKj4+Hi35Xl5eaqpqXFb3q1bN3Xo0EE5OTmSpJycHPXs2VORkZGuMQkJCSovL9fevXvPeMyqqiqVl5e7PQAAgJn8PXnwZcuW6bPPPtOnn356yjqn06mAgAC1bNnSbXlkZKScTqdrzM9D5+T6k+vOZPbs2XrqqafOcvYAAOB84LErO0VFRZo4caKWLl2q5s2bn9NjT5kyRWVlZa5HUVHROT0+AAA4dzwWO3l5eSotLdWVV14pf39/+fv7a9OmTXrppZfk7++vyMhIVVdX6+jRo27blZSUKCoqSpIUFRV1yruzTj4/OeZ0AgMDZbPZ3B4AAMBMHoudAQMGaM+ePdq1a5frcdVVV2n06NGur5s1a6bs7GzXNgUFBSosLJTD4ZAkORwO7dmzR6Wlpa4xWVlZstlsio2NPefnBAAAvI/H7tkJDQ1Vjx493JYFBwcrIiLCtTwlJUVpaWkKDw+XzWbThAkT5HA41LdvX0nSLbfcotjYWI0ZM0bp6elyOp2aNm2aUlNTFRgYeM7PCQAAeB+P3qD8a+bNmydfX18lJSWpqqpKCQkJmj9/vmu9n5+fMjMzNW7cODkcDgUHBys5OVkzZ8704KwBAIA38bEsy/L0JDytvLxcdrtdZWVlTXb/TubOA02yX+B8N+SKGE9PAcB5qr6/vz3+OTsAAABNidgBAABGI3YAAIDRiB0AAGA0YgcAABiN2AEAAEYjdgAAgNGIHQAAYDRiBwAAGI3YAQAARiN2AACA0YgdAABgNGIHAAAYjdgBAABGI3YAAIDRiB0AAGA0YgcAABiN2AEAAEYjdgAAgNGIHQAAYDRiBwAAGI3YAQAARiN2AACA0YgdAABgNGIHAAAYjdgBAABGI3YAAIDRiB0AAGA0YgcAABiN2AEAAEYjdgAAgNGIHQAAYDRiBwAAGI3YAQAARiN2AACA0YgdAABgNGIHAAAYjdgBAABGI3YAAIDR/Bu6wfr167VixQp9++238vHxUUxMjG6//XbdcMMNTTE/AACAs9KgKzsPPvig4uPj9c477+jIkSM6dOiQli5dqptvvlkTJkxoqjkCAAD8ZvWOnZUrV2rx4sV68803dfjwYeXk5Cg3N1eHDh3S66+/roULF+rDDz9syrkCAAA0WL1jZ/HixUpLS9PYsWPl4+Pznx34+uree+/VpEmTtGjRoiaZJAAAwG9V79j57LPPdNttt51x/YgRI5SXl9cokwIAAGgs9Y6dw4cPq127dmdc365dOx05cqRRJgUAANBY6h071dXVatas2RnX+/v7q7q6ulEmBQAA0Fga9NbzJ554QkFBQadd9+OPPzbKhAAAABpTvWPnhhtuUEFBwa+OAQAA8Cb1jp2NGzc24TQAAACaBn8uAgAAGK3eV3bS0tLqNW7u3Lm/eTIAAACNrd6xs3Pnzl8d8/MPGwQAAPAG9Y6dDRs2NPrBX331Vb366qv69ttvJUmXXXaZpk+frsGDB0uSKisr9cgjj2jZsmWqqqpSQkKC5s+fr8jISNc+CgsLNW7cOG3YsEEhISFKTk7W7Nmz5e/f4L9xCgAADOTRe3batWunZ599Vnl5edqxY4f69++vYcOGae/evZKkhx9+WKtWrdLy5cu1adMmFRcXa8SIEa7ta2trlZiYqOrqam3dulVLlixRRkaGpk+f7qlTAgAAXsbHsizL05P4ufDwcD333HO6/fbb1bp1a7399tu6/fbbJUlfffWVunfvrpycHPXt21erV6/WkCFDVFxc7Lras2DBAj322GM6dOiQAgIC6nXM8vJy2e12lZWVyWazNcl5Ze480CT7Bc53Q66I8fQUAJyn6vv722vejVVbW6tly5bp+PHjcjgcysvLU01NjeLj411junXrpg4dOignJ0eSlJOTo549e7q9rJWQkKDy8nLX1aHTqaqqUnl5udsDAACYyeOxs2fPHoWEhCgwMFAPPvigVq5cqdjYWDmdTgUEBKhly5Zu4yMjI+V0OiVJTqfTLXROrj+57kxmz54tu93uerRv375xTwoAAHiNBsXOiRMnNHPmTH333XeNNoGuXbtq165d2rZtm8aNG6fk5GR9+eWXjbb/05kyZYrKyspcj6KioiY9HgAA8JwGxY6/v7+ee+45nThxotEmEBAQoEsuuUS9e/fW7NmzFRcXpxdffFFRUVGqrq7W0aNH3caXlJQoKipKkhQVFaWSkpJT1p9cdyaBgYGy2WxuDwAAYKYGv4zVv39/bdq0qSnmIkmqq6tTVVWVevfurWbNmik7O9u1rqCgQIWFhXI4HJIkh8OhPXv2qLS01DUmKytLNptNsbGxTTZHAABw/mjwh9EMHjxYjz/+uPbs2aPevXsrODjYbf2tt95a731NmTJFgwcPVocOHXTs2DG9/fbb2rhxo9auXSu73a6UlBSlpaUpPDxcNptNEyZMkMPhUN++fSVJt9xyi2JjYzVmzBilp6fL6XRq2rRpSk1NVWBgYENPDQAAGKjBsfPQQw9JOv2fhfDx8VFtbW2991VaWqq7775bBw8elN1u1+WXX661a9dq4MCBkqR58+bJ19dXSUlJbh8qeJKfn58yMzM1btw4ORwOBQcHKzk5WTNnzmzoaQEAAEN53efseAKfswN4Dp+zA+C3Oiefs1NZWXk2mwMAADS5BsdObW2tnn76aV100UUKCQnRP//5T0nSE088oUWLFjX6BAEAAM5Gg2Nn1qxZysjIUHp6utufY+jRo4feeOONRp0cAADA2Wpw7Lz11ltauHChRo8eLT8/P9fyuLg4ffXVV406OQAAgLPV4Nj517/+pUsuueSU5XV1daqpqWmUSQEAADSWBsdObGysPvnkk1OWv//++7riiisaZVIAAACNpcGfszN9+nQlJyfrX//6l+rq6rRixQoVFBTorbfeUmZmZlPMEQAA4Ddr8JWdYcOGadWqVVq3bp2Cg4M1ffp05efna9WqVa4PAwQAAPAWDb6yI0nXX3+9srKyGnsuAAAAja7BV3aKior03XffuZ5v375dkyZN0sKFCxt1YgAAAI2hwbHzX//1X9qwYYMkyel0Kj4+Xtu3b9fUqVP5m1QAAMDrNDh2vvjiC11zzTWSpPfee089e/bU1q1btXTpUmVkZDT2/AAAAM5Kg2OnpqZGgYGBkqR169bp1ltvlSR169ZNBw8ebNzZAQAAnKUGx85ll12mBQsW6JNPPlFWVpYGDRokSSouLlZERESjTxAAAOBsNDh2/vznP+u1117TTTfdpFGjRikuLk6S9OGHH7pe3gIAAPAWDX7r+U033aTDhw+rvLxcYWFhruUPPPCAgoKCGnVyAAAAZ+s3fc6On5+fW+hIUqdOnRpjPgAAAI2q3rETFhYmHx+fU5bb7XZ16dJFjz76KJ+gDAAAvE69Y+eFF1447fKjR48qLy9PQ4YM0fvvv6+hQ4c21twAAADOWr1jJzk5+RfX9+rVS7NnzyZ2AACAV2nwu7HOZMiQIfrqq68aa3cAAACNotFip6qqSgEBAY21OwAAgEbRaLGzaNEi9erVq7F2BwAA0Cjqfc9OWlraaZeXlZXps88+0759+7R58+ZGmxgAAEBjqHfs7Ny587TLbTabBg4cqBUrVigmJqbRJgYAANAY6h07GzZsaMp5AAAANIlGu2cHAADAGxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwmkdjZ/bs2br66qsVGhqqNm3aaPjw4SooKHAbU1lZqdTUVEVERCgkJERJSUkqKSlxG1NYWKjExEQFBQWpTZs2mjx5sk6cOHEuTwUAAHgpj8bOpk2blJqaqtzcXGVlZammpka33HKLjh8/7hrz8MMPa9WqVVq+fLk2bdqk4uJijRgxwrW+trZWiYmJqq6u1tatW7VkyRJlZGRo+vTpnjglAADgZXwsy7I8PYmTDh06pDZt2mjTpk264YYbVFZWptatW+vtt9/W7bffLkn66quv1L17d+Xk5Khv375avXq1hgwZouLiYkVGRkqSFixYoMcee0yHDh1SQEDArx63vLxcdrtdZWVlstlsTXJumTsPNMl+gfPdkCtiPD0FAOep+v7+9qp7dsrKyiRJ4eHhkqS8vDzV1NQoPj7eNaZbt27q0KGDcnJyJEk5OTnq2bOnK3QkKSEhQeXl5dq7d+9pj1NVVaXy8nK3BwAAMJPXxE5dXZ0mTZqkfv36qUePHpIkp9OpgIAAtWzZ0m1sZGSknE6na8zPQ+fk+pPrTmf27Nmy2+2uR/v27Rv5bAAAgLfwmthJTU3VF198oWXLljX5saZMmaKysjLXo6ioqMmPCQAAPMPf0xOQpPHjxyszM1ObN29Wu3btXMujoqJUXV2to0ePul3dKSkpUVRUlGvM9u3b3fZ38t1aJ8f8X4GBgQoMDGzkswAAAN7Io1d2LMvS+PHjtXLlSq1fv14xMe43Kvbu3VvNmjVTdna2a1lBQYEKCwvlcDgkSQ6HQ3v27FFpaalrTFZWlmw2m2JjY8/NiQAAAK/l0Ss7qampevvtt/X3v/9doaGhrnts7Ha7WrRoIbvdrpSUFKWlpSk8PFw2m00TJkyQw+FQ3759JUm33HKLYmNjNWbMGKWnp8vpdGratGlKTU3l6g0AAPBs7Lz66quSpJtuuslt+eLFizV27FhJ0rx58+Tr66ukpCRVVVUpISFB8+fPd4318/NTZmamxo0bJ4fDoeDgYCUnJ2vmzJnn6jQAAIAX86rP2fEUPmcH8Bw+ZwfAb3Vefs4OAABAYyN2AACA0YgdAABgNGIHAAAYjdgBAABGI3YAAIDRiB0AAGA0YgcAABiN2AEAAEYjdgAAgNGIHQAAYDRiBwAAGI3YAQAARiN2AACA0YgdAABgNGIHAAAYjdgBAABGI3YAAIDRiB0AAGA0YgcAABiN2AEAAEYjdgAAgNGIHQAAYDRiBwAAGI3YAQAARiN2AACA0YgdAABgNH9PTwAAzneDZ33g6SkAXmn11OGenoIkruwAAADDETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjeTR2Nm/erKFDhyo6Olo+Pj764IMP3NZblqXp06erbdu2atGiheLj4/X111+7jfn+++81evRo2Ww2tWzZUikpKaqoqDiHZwEAALyZR2Pn+PHjiouL0yuvvHLa9enp6XrppZe0YMECbdu2TcHBwUpISFBlZaVrzOjRo7V3715lZWUpMzNTmzdv1gMPPHCuTgEAAHg5f08efPDgwRo8ePBp11mWpRdeeEHTpk3TsGHDJElvvfWWIiMj9cEHH+iuu+5Sfn6+1qxZo08//VRXXXWVJOkvf/mLfve73+n5559XdHT0afddVVWlqqoq1/Py8vJGPjMAAOAtvPaenQMHDsjpdCo+Pt61zG63q0+fPsrJyZEk5eTkqGXLlq7QkaT4+Hj5+vpq27ZtZ9z37NmzZbfbXY/27ds33YkAAACP8trYcTqdkqTIyEi35ZGRka51TqdTbdq0cVvv7++v8PBw15jTmTJlisrKylyPoqKiRp49AADwFh59GctTAgMDFRgY6OlpAACAc8Brr+xERUVJkkpKStyWl5SUuNZFRUWptLTUbf2JEyf0/fffu8YAAIALm9fGTkxMjKKiopSdne1aVl5erm3btsnhcEiSHA6Hjh49qry8PNeY9evXq66uTn369DnncwYAAN7Hoy9jVVRUaP/+/a7nBw4c0K5duxQeHq4OHTpo0qRJ+tOf/qRLL71UMTExeuKJJxQdHa3hw4dLkrp3765Bgwbp/vvv14IFC1RTU6Px48frrrvuOuM7sQAAwIXFo7GzY8cO3Xzzza7naWlpkqTk5GRlZGToj3/8o44fP64HHnhAR48e1XXXXac1a9aoefPmrm2WLl2q8ePHa8CAAfL19VVSUpJeeumlc34uAADAO/lYlmV5ehKeVl5eLrvdrrKyMtlstiY5RubOA02yX+B8N+SKGE9P4awNnvWBp6cAeKXVU4c36f7r+/vba+/ZAQAAaAzEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxE7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjEbsAAAAoxkTO6+88oo6deqk5s2bq0+fPtq+fbunpwQAALyAEbHz7rvvKi0tTTNmzNBnn32muLg4JSQkqLS01NNTAwAAHmZE7MydO1f333+/7rnnHsXGxmrBggUKCgrSm2++6empAQAAD/P39ATOVnV1tfLy8jRlyhTXMl9fX8XHxysnJ+e021RVVamqqsr1vKysTJJUXl7eZPP8seJYk+0bOJ815c/duXKi8kdPTwHwSk39831y/5Zl/eK48z52Dh8+rNraWkVGRrotj4yM1FdffXXabWbPnq2nnnrqlOXt27dvkjkCAHAhsv/p3Bzn2LFjstvtZ1x/3sfObzFlyhSlpaW5ntfV1en7779XRESEfHx8PDgznAvl5eVq3769ioqKZLPZPD0dAI2In+8Li2VZOnbsmKKjo39x3HkfO61atZKfn59KSkrclpeUlCgqKuq02wQGBiowMNBtWcuWLZtqivBSNpuNfwwBQ/HzfeH4pSs6J533NygHBASod+/eys7Odi2rq6tTdna2HA6HB2cGAAC8wXl/ZUeS0tLSlJycrKuuukrXXHONXnjhBR0/flz33HOPp6cGAAA8zIjYGTlypA4dOqTp06fL6XSqV69eWrNmzSk3LQPSTy9jzpgx45SXMgGc//j5xun4WL/2fi0AAIDz2Hl/zw4AAMAvIXYAAIDRiB0AAGA0YgcXhCeffFK9evU66/2MHTtWw4cP/8UxN910kyZNmnTWxwLwH/xc4WwQO/BKOTk58vPzU2Jioqen4ubFF19URkaGp6cBXHBWrFihp59+2vV87969uvPOO9W6dWsFBgaqS5cumj59un780f3vlO3evVu33nqr2rRpo+bNm6tTp04aOXKkSktLz/UpwIOIHXilRYsWacKECdq8ebOKi4ub/HjV1dX1Gme32/m0bcADwsPDFRoaKknKzc1Vnz59VF1drY8++kj79u3TrFmzlJGRoYEDB7p+ng8dOqQBAwYoPDxca9euVX5+vhYvXqzo6GgdP37ck6eDc4zYgdepqKjQu+++q3HjxikxMdHtSsrGjRvl4+Oj7OxsXXXVVQoKCtK1116rgoICt308++yzioyMVGhoqFJSUlRZWem2/uTLUbNmzVJ0dLS6du0qSdqzZ4/69++vFi1aKCIiQg888IAqKipO2e6k48eP6+6771ZISIjatm2rOXPmNP43BIDrZSzLspSSkqLu3btrxYoVuuaaa9SxY0fdcccdWrVqlXJycjRv3jxJ0pYtW1RWVqY33nhDV1xxhWJiYnTzzTdr3rx5iomJ8fAZ4VwiduB13nvvPXXr1k1du3bV73//e7355pv6vx8HNXXqVM2ZM0c7duyQv7+/7r33Xrftn3zyST3zzDPasWOH2rZtq/nz559ynOzsbBUUFCgrK0uZmZk6fvy4EhISFBYWpk8//VTLly/XunXrNH78+DPOdfLkydq0aZP+/ve/6+OPP9bGjRv12WefNd43A4CbXbt26csvv1RaWpp8fd1/hcXFxSk+Pl7vvPOOJCkqKkonTpzQypUrT/k3BBcYC/Ay1157rfXCCy9YlmVZNTU1VqtWrawNGzZYlmVZGzZssCRZ69atc43/6KOPLEnWv//9b8uyLMvhcFgPPfSQ2z779OljxcXFuZ4nJydbkZGRVlVVlWvZwoULrbCwMKuiosJt376+vpbT6XRtN2zYMMuyLOvYsWNWQECA9d5777nGHzlyxGrRooU1ceLEs/4+APiPG2+80Zo4caK1bNkyS5K1c+fO0477wx/+YLVo0cL1/P/9v/9n+fv7W+Hh4dagQYOs9PR0188zLhxc2YFXKSgo0Pbt2zVq1ChJkr+/v0aOHKlFixa5jbv88stdX7dt21aSXDcc5ufnq0+fPm7jT/dHYXv27KmAgADX8/z8fMXFxSk4ONi1rF+/fqqrqzvlZTJJ+uabb1RdXe12rPDwcNdLYgCajlXPKzWzZs2S0+nUggULdNlll2nBggXq1q2b9uzZ08QzhDchduBVFi1apBMnTig6Olr+/v7y9/fXq6++qr/97W8qKytzjWvWrJnrax8fH0k//bX7hvh51AA4P3Tp0kXST/9zcjr5+fmuMSdFRETojjvu0PPPP6/8/HxFR0fr+eefb/K5wnsQO/AaJ06c0FtvvaU5c+Zo165drsfu3bsVHR3teh3+13Tv3l3btm1zW5abm1uv7Xbv3u32Lo0tW7bI19f3tFdrOnfurGbNmrkd64cfftC+ffvqNU8ADderVy9169ZN8+bNO+V/cHbv3q1169a5rgyfTkBAgDp37sy7sS4wxA68RmZmpn744QelpKSoR48ebo+kpKRTXso6k4kTJ+rNN9/U4sWLtW/fPs2YMUN79+791e1Gjx6t5s2bKzk5WV988YU2bNigCRMmaMyYMYqMjDxlfEhIiFJSUjR58mStX79eX3zxhcaOHXvKTZMAGo+Pj48WLVqkL7/8UklJSdq+fbsKCwu1fPlyDR06VA6Hw/Xhg5mZmfr973+vzMxM7du3TwUFBXr++ef1j3/8Q8OGDfPsieCc8vf0BICTFi1apPj4eNnt9lPWJSUlKT09XZ9//vmv7mfkyJH65ptv9Mc//lGVlZVKSkrSuHHjtHbt2l/cLigoSGvXrtXEiRN19dVXKygoSElJSZo7d+4Zt3nuuedUUVGhoUOHKjQ0VI888ojby20AGt+1116r3NxcPfXUUxo8eLCOHTumDh06KDk5WVOmTFFgYKAkKTY2VkFBQXrkkUdUVFSkwMBAXXrppXrjjTc0ZswYD58FziUfq753eQEAAJyHuN4OAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxA+C8MXbsWA0fPtzT0wBwniF2gAtMUVGR7r33XkVHRysgIEAdO3bUxIkTdeTIEU9PzeXbb7+Vj4+Pdu3a5bb8xRdfVEZGRpMf/9ChQxo3bpw6dOigwMBARUVFKSEhQVu2bGmU/RNtwLnF38YCLiD//Oc/5XA41KVLF73zzjuKiYnR3r17NXnyZK1evVq5ubkKDw9vsuNXV1crICDgN29/ur+b1hSSkpJUXV2tJUuW6OKLL1ZJSYmys7O9KggBNIAF4IIxaNAgq127dtaPP/7otvzgwYNWUFCQ9eCDD7qWdezY0Zo5c6Z11113WUFBQVZ0dLT18ssvu233ww8/WCkpKVarVq2s0NBQ6+abb7Z27drlWj9jxgwrLi7Oev31161OnTpZPj4+lmVZ1urVq61+/fpZdrvdCg8PtxITE639+/e7tpPk9rjxxhsty7Ks5ORka9iwYa5xN954ozVhwgRr8uTJVlhYmBUZGWnNmDHDbY75+flWv379rMDAQKt79+5WVlaWJclauXLlab9HP/zwgyXJ2rhx4xm/j/fcc4+VmJjotqy6utpq3bq19cYbb1iWZVnLly+3evToYTVv3twKDw+3BgwYYFVUVFgzZsw45fw2bNhgWZZlFRYWWnfccYdlt9utsLAw69Zbb7UOHDjgOsbJ8581a5bVpk0by263W0899ZRVU1NjPfroo1ZYWJh10UUXWW+++eYZ5w5ciHgZC7hAfP/991q7dq0eeughtWjRwm1dVFSURo8erXfffVfWz/428HPPPae4uDjt3LlTjz/+uCZOnKisrCzX+jvuuEOlpaVavXq18vLydOWVV2rAgAH6/vvvXWP279+vv/3tb1qxYoXrZanjx48rLS1NO3bsUHZ2tnx9fXXbbbeprq5OkrR9+3ZJ0rp163Tw4EGtWLHijOe1ZMkSBQcHa9u2bUpPT9fMmTNdc6ytrdXw4cMVFBSkbdu2aeHChZo6deovfp9CQkIUEhKiDz74QFVVVacdc99992nNmjU6ePCga1lmZqZ+/PFHjRw5UgcPHtSoUaN07733Kj8/Xxs3btSIESNkWZYeffRR3XnnnRo0aJAOHjyogwcP6tprr1VNTY0SEhIUGhqqTz75RFu2bFFISIgGDRqk6upq13HWr1+v4uJibd68WXPnztWMGTM0ZMgQhYWFadu2bXrwwQf13//93/ruu+9+8TyBC4qnawvAuZGbm/uLVzTmzp1rSbJKSkosy/rpys6gQYPcxowcOdIaPHiwZVmW9cknn1g2m82qrKx0G9O5c2frtddesyzrpys7zZo1s0pLS39xbocOHbIkWXv27LEsy7IOHDhgSbJ27tzpNu50V3auu+46tzFXX3219dhjj1mW9dMVJH9/f+vgwYOu9b92ZceyLOv999+3wsLCrObNm1vXXnutNWXKFGv37t1uY2JjY60///nPrudDhw61xo4da1mWZeXl5VmSrG+//fa0+/+/52FZlvU///M/VteuXa26ujrXsqqqKqtFixbW2rVrXdt17NjRqq2tdY3p2rWrdf3117uenzhxwgoODrbeeeedM54fcKHhyg5wgbF+duXm1zgcjlOe5+fnS5J2796tiooKRUREuK6GhISE6MCBA/rmm29c23Ts2FGtW7d228/XX3+tUaNG6eKLL5bNZlOnTp0kSYWFhQ0+n8svv9ztedu2bVVaWipJKigoUPv27RUVFeVaf8011/zqPpOSklRcXKwPP/xQgwYN0saNG3XllVe63Rx93333afHixZKkkpISrV69Wvfee68kKS4uTgMGDFDPnj11xx136PXXX9cPP/zwi8fcvXu39u/fr9DQUNf3Mjw8XJWVlW7fz8suu0y+vv/5pzsyMlI9e/Z0Pffz81NERITrewCAG5SBC8Yll1wiHx8f5efn67bbbjtlfX5+vsLCwk4JkzOpqKhQ27ZttXHjxlPWtWzZ0vV1cHDwKeuHDh2qjh076vXXX1d0dLTq6urUo0cPt5dr6qtZs2Zuz318fFwvh52N5s2ba+DAgRo4cKCeeOIJ3XfffZoxY4bGjh0rSbr77rv1+OOPKycnR1u3blVMTIyuv/56ST8FR1ZWlrZu3aqPP/5Yf/nLXzR16lRt27ZNMTExpz1eRUWFevfuraVLl56y7uf/TU53vk31PQBMwZUd4AIRERGhgQMHav78+fr3v//tts7pdGrp0qUaOXKkfHx8XMtzc3PdxuXm5qp79+6SpCuvvFJOp1P+/v665JJL3B6tWrU64zyOHDmigoICTZs2TQMGDFD37t1Puepx8h1btbW1Z3XOXbt2VVFRkUpKSlzLPv3009+0r9jYWB0/ftz1PCIiQsOHD9fixYuVkZGhe+65x228j4+P+vXrp6eeeko7d+5UQECAVq5cKemn8/u/53bllVfq66+/Vps2bU75fp6rd6EBpiJ2gAvIyy+/rKqqKiUkJGjz5s0qKirSmjVrNHDgQF100UWaNWuW2/gtW7YoPT1d+/bt0yuvvKLly5dr4sSJkqT4+Hg5HA4NHz5cH3/8sb799ltt3bpVU6dO1Y4dO844h7CwMEVERGjhwoXav3+/1q9fr7S0NLcxbdq0UYsWLbRmzRqVlJSorKzsN53vwIED1blzZyUnJ+vzzz/Xli1bNG3aNElyi7qfO3LkiPr376+//vWv+vzzz3XgwAEtX75c6enpGjZsmNvY++67T0uWLFF+fr6Sk5Ndy7dt26ZnnnlGO3bsUGFhoVasWKFDhw65QrFTp076/PPPVVBQoMOHD6umpkajR49Wq1atNGzYMH3yySc6cOCANm7cqD/84Q/cbAycJWIHuIBceuml2rFjhy6++GLdeeed6ty5sx544AHdfPPNysnJOeUzdh555BHt2LFDV1xxhf70pz9p7ty5SkhIkPRTLPzjH//QDTfcoHvuuUddunTRXXfdpf/93/9VZGTkGefg6+urZcuWKS8vTz169NDDDz+s5557zm2Mv7+/XnrpJb322muKjo4+JTLqy8/PTx988IEqKip09dVX67777nO9G6t58+an3SYkJER9+vTRvHnzdMMNN6hHjx564okndP/99+vll192GxsfH6+2bdsqISFB0dHRruU2m02bN2/W7373O3Xp0kXTpk3TnDlzNHjwYEnS/fffr65du+qqq65S69attWXLFgUFBWnz5s3q0KGDRowYoe7duyslJUWVlZWy2Wy/6fwB/MTHasjdigAuGJ06ddKkSZM0adIkT0+lUW3ZskXXXXed9u/fr86dO5/VvioqKnTRRRdp8eLFGjFiRCPNEEBj4wZlAEZbuXKlQkJCdOmll2r//v2aOHGi+vXrd1ahU1dXp8OHD2vOnDlq2bKlbr311kacMYDGRuwAMNqxY8f02GOPqbCwUK1atVJ8fLzmzJlzVvssLCxUTEyM2rVrp4yMDPn7808p4M14GQsAABiNG5QBAIDRiB0AAGA0YgcAABiN2AEAAEYjdgAAgNGIHQAAYDRiBwAAGI3YAQAARvv/MdEqvUMHAhoAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2 = df.groupby('Device Model')['User ID'].nunique().reset_index()"
      ],
      "metadata": {
        "id": "h6dHYG7kbuZy"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sns.barplot(data=df2, x='Device Model', y='User ID', palette = 'Spectral')\n",
        "plt.xticks(rotation = 45)\n",
        "plt.title('The number of devices per user')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 712
        },
        "id": "S5T7c0ehbwdu",
        "outputId": "882136f8-50a8-46c3-b4fb-d91839259c79"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-20-80ef78b0cd90>:1: FutureWarning:\n",
            "\n",
            "\n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.relplot(data = df, x='Screen On Time (hours/day)',\n",
        "            y='Battery Drain (mAh/day)', kind = 'scatter',\n",
        "            col = 'Gender', size = 'Age', hue = 'Age',\n",
        "            sizes=(20, 200), height=6, aspect=1.2)\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "id": "fqy0B_SmbyJ7",
        "outputId": "7dc18ef3-d93d-4b31-bc4a-1f4576f98afe"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1507.62x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig = px.scatter(df, x=\"Screen On Time (hours/day)\", y=\"Battery Drain (mAh/day)\",\n",
        "\t         size=\"Age\", color=\"User Behavior Class\",\n",
        "                 hover_name=\"Age\", log_x=True, size_max=60,\n",
        "                 title = 'Battery Drain vs Screen Time by User Behavior Class')\n",
        "fig.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "PNqCtKf-nPuA",
        "outputId": "0a68b597-9a5d-473e-bd97-7a9776f9de95"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"925bc5ee-1773-4f27-a14a-1f13dffb9165\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"925bc5ee-1773-4f27-a14a-1f13dffb9165\")) {                    Plotly.newPlot(                        \"925bc5ee-1773-4f27-a14a-1f13dffb9165\",                        [{\"hovertemplate\":\"\\u003cb\\u003e%{hovertext}\\u003c\\u002fb\\u003e\\u003cbr\\u003e\\u003cbr\\u003eScreen On Time (hours\\u002fday)=%{x}\\u003cbr\\u003eBattery Drain (mAh\\u002fday)=%{y}\\u003cbr\\u003eAge=%{marker.size}\\u003cbr\\u003eUser Behavior Class=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"hovertext\":[40.0,47.0,42.0,20.0,31.0,31.0,21.0,31.0,42.0,42.0,34.0,24.0,57.0,43.0,49.0,39.0,47.0,44.0,26.0,29.0,45.0,43.0,23.0,37.0,58.0,52.0,29.0,33.0,55.0,19.0,37.0,25.0,21.0,58.0,38.0,20.0,26.0,24.0,40.0,23.0,56.0,33.0,43.0,18.0,56.0,39.0,22.0,27.0,49.0,49.0,54.0,29.0,27.0,53.0,53.0,30.0,42.0,26.0,22.0,56.0,28.0,57.0,55.0,21.0,43.0,56.0,55.0,28.0,31.0,29.0,45.0,37.0,22.0,50.0,39.0,23.0,54.0,30.0,51.0,34.0,51.0,41.0,21.0,19.0,33.0,44.0,39.0,44.0,34.0,45.0,40.0,32.0,56.0,35.0,58.0,50.0,20.0,28.0,25.0,50.0,53.0,19.0,32.0,28.0,25.0,36.0,55.0,23.0,50.0,39.0,41.0,19.0,27.0,42.0,54.0,39.0,18.0,27.0,28.0,41.0,45.0,39.0,49.0,35.0,21.0,50.0,20.0,50.0,31.0,36.0,40.0,52.0,40.0,42.0,51.0,55.0,39.0,24.0,18.0,53.0,50.0,51.0,57.0,29.0,29.0,35.0,33.0,24.0,56.0,51.0,21.0,52.0,56.0,27.0,31.0,32.0,54.0,51.0,51.0,40.0,35.0,42.0,45.0,22.0,43.0,49.0,30.0,58.0,55.0,47.0,44.0,23.0,37.0,27.0,29.0,50.0,21.0,31.0,38.0,55.0,33.0,24.0,47.0,39.0,34.0,42.0,34.0,37.0,30.0,32.0,23.0,24.0,59.0,36.0,23.0,45.0,47.0,41.0,19.0,35.0,31.0,37.0,22.0,27.0,25.0,29.0,37.0,23.0,41.0,40.0,25.0,18.0,25.0,22.0,42.0,51.0,40.0,24.0,52.0,43.0,32.0,32.0,21.0,53.0,27.0,59.0,59.0,32.0,41.0,50.0,38.0,31.0,35.0,36.0,53.0,19.0,20.0,19.0,53.0,33.0,57.0,37.0,51.0,44.0,35.0,29.0,33.0,19.0,50.0,58.0,29.0,23.0,22.0,48.0,24.0,46.0,52.0,19.0,18.0,49.0,43.0,46.0,34.0,57.0,40.0,25.0,22.0,32.0,55.0,20.0,53.0,51.0,31.0,38.0,35.0,49.0,32.0,54.0,47.0,33.0,51.0,26.0,51.0,54.0,43.0,37.0,47.0,29.0,47.0,50.0,28.0,30.0,36.0,27.0,52.0,41.0,31.0,53.0,44.0,59.0,35.0,38.0,34.0,34.0,19.0,27.0,43.0,45.0,20.0,40.0,25.0,32.0,20.0,49.0,29.0,55.0,42.0,28.0,47.0,51.0,22.0,57.0,21.0,31.0,23.0,25.0,55.0,24.0,31.0,42.0,21.0,47.0,54.0,34.0,46.0,45.0,44.0,34.0,46.0,30.0,43.0,26.0,56.0,57.0,43.0,37.0,57.0,46.0,26.0,34.0,54.0,35.0,20.0,53.0,54.0,45.0,55.0,48.0,44.0,54.0,26.0,22.0,38.0,45.0,34.0,22.0,29.0,58.0,49.0,34.0,25.0,22.0,59.0,25.0,42.0,26.0,51.0,31.0,57.0,51.0,34.0,39.0,37.0,30.0,28.0,40.0,28.0,32.0,34.0,50.0,36.0,58.0,54.0,53.0,45.0,52.0,27.0,20.0,43.0,29.0,42.0,53.0,40.0,51.0,22.0,43.0,25.0,55.0,22.0,51.0,31.0,50.0,52.0,35.0,33.0,56.0,27.0,57.0,27.0,46.0,56.0,43.0,22.0,28.0,24.0,37.0,44.0,51.0,58.0,37.0,22.0,53.0,51.0,42.0,58.0,34.0,20.0,34.0,52.0,18.0,36.0,39.0,33.0,29.0,22.0,58.0,24.0,58.0,22.0,20.0,56.0,52.0,26.0,43.0,45.0,27.0,27.0,46.0,58.0,50.0,20.0,55.0,55.0,23.0,26.0,55.0,51.0,41.0,46.0,37.0,40.0,53.0,26.0,29.0,49.0,54.0,49.0,59.0,41.0,57.0,51.0,34.0,56.0,49.0,39.0,36.0,57.0,57.0,32.0,21.0,47.0,53.0,36.0,23.0,29.0,57.0,43.0,20.0,53.0,45.0,32.0,24.0,55.0,52.0,47.0,49.0,27.0,42.0,22.0,31.0,38.0,39.0,34.0,57.0,54.0,25.0,44.0,25.0,34.0,51.0,20.0,25.0,49.0,48.0,57.0,59.0,29.0,57.0,24.0,42.0,43.0,47.0,23.0,22.0,30.0,25.0,30.0,34.0,38.0,27.0,52.0,25.0,28.0,55.0,28.0,34.0,21.0,58.0,45.0,21.0,42.0,37.0,32.0,37.0,19.0,32.0,40.0,27.0,55.0,47.0,38.0,18.0,33.0,31.0,44.0,40.0,35.0,32.0,49.0,18.0,57.0,25.0,56.0,22.0,47.0,49.0,34.0,37.0,40.0,36.0,27.0,27.0,19.0,43.0,30.0,29.0,43.0,24.0,36.0,39.0,30.0,36.0,22.0,26.0,48.0,41.0,21.0,59.0,28.0,47.0,30.0,44.0,43.0,41.0,54.0,53.0,37.0,21.0,40.0,51.0,48.0,37.0,44.0,46.0,18.0,52.0,36.0,36.0,26.0,59.0,59.0,56.0,41.0,21.0,45.0,31.0,55.0,59.0,55.0,21.0,25.0,45.0,56.0,29.0,43.0,48.0,47.0,32.0,35.0,35.0,42.0,26.0,27.0,46.0,20.0,20.0,58.0,42.0,53.0,31.0,49.0,51.0,30.0,29.0,56.0,39.0,54.0,40.0,43.0,35.0,59.0,48.0,45.0,55.0,52.0,53.0,46.0,36.0,23.0,27.0,48.0,22.0,27.0,52.0,27.0,40.0,34.0,52.0,36.0,36.0,25.0,30.0,42.0,45.0,25.0,18.0,18.0,54.0,52.0,32.0,30.0,51.0,48.0,31.0,34.0,22.0,59.0,50.0,44.0,23.0],\"legendgroup\":\"\",\"marker\":{\"color\":[4,3,2,3,3,2,4,5,4,4,1,3,4,3,3,5,2,3,1,5,2,5,4,3,3,2,4,5,4,4,3,3,3,1,5,1,2,5,4,4,3,5,2,2,2,5,5,2,5,5,4,3,2,2,5,1,1,5,4,4,5,4,1,5,4,3,3,2,5,1,4,5,4,1,1,3,1,2,1,3,5,2,4,1,3,4,2,1,2,4,2,3,1,2,4,4,5,5,1,3,1,3,2,3,2,1,2,1,3,3,2,5,3,2,4,2,1,3,1,2,4,5,5,5,3,5,4,3,2,2,5,4,2,1,1,5,1,3,5,5,3,4,2,1,5,3,4,1,3,2,5,1,2,4,1,2,1,4,4,2,1,1,4,1,3,5,5,1,3,5,2,1,2,4,1,3,3,3,3,5,2,4,5,1,5,5,4,1,2,1,2,1,4,3,4,3,3,2,1,2,5,2,1,1,2,4,1,2,5,3,4,5,2,1,2,5,4,5,5,2,4,2,4,5,2,5,4,3,2,4,2,5,5,2,2,1,5,4,1,5,1,5,2,4,1,3,1,4,2,1,1,4,5,2,1,4,4,3,3,5,1,4,5,1,4,5,3,5,3,4,4,3,2,2,2,5,3,3,1,4,1,1,4,1,4,5,4,3,2,1,4,1,1,3,5,1,4,2,3,2,4,3,4,5,2,2,3,4,3,4,3,4,2,2,3,1,3,2,4,5,3,3,4,1,4,3,3,1,1,5,3,2,3,4,1,5,4,1,4,1,1,5,5,3,3,4,2,1,2,4,4,1,3,4,1,1,3,5,1,3,5,5,1,4,5,4,5,5,2,2,5,5,5,5,1,1,1,4,5,2,3,5,1,2,2,4,2,1,5,2,4,4,2,4,5,4,1,5,1,1,5,2,4,5,5,4,2,4,4,4,5,5,3,3,2,2,3,5,3,1,1,2,4,1,3,2,2,2,2,5,3,2,5,1,5,2,3,1,2,2,3,3,1,3,5,4,5,3,2,1,2,5,2,1,2,1,1,3,1,2,5,2,3,3,1,3,4,3,4,1,3,5,2,3,3,4,4,3,3,3,2,5,5,1,4,1,2,3,4,5,4,2,1,4,2,5,3,2,3,2,1,4,5,3,5,4,3,1,3,5,3,5,1,2,4,2,2,1,5,2,4,1,4,5,3,3,2,1,2,3,5,4,4,3,4,2,3,5,5,5,5,2,3,3,5,1,3,2,4,2,4,2,2,4,4,3,2,3,4,5,4,2,1,1,3,1,2,1,3,4,4,4,3,5,5,2,5,4,3,1,5,2,3,1,1,2,3,4,4,2,2,5,4,3,4,5,5,2,2,3,4,1,2,2,3,4,5,3,3,5,5,1,5,1,2,2,3,3,4,3,3,1,4,1,1,1,3,3,1,4,2,3,5,2,4,2,5,1,4,5,1,1,5,2,3,2,1,1,4,3,2,1,3,1,5,2,3,3,4,5,1,2,2,4,5,3,5,3,2,2,1,4,5,1,5,1,2,2,3,1,4,4,3,1,3,4,4,4,3,5,3,2,4,5,5,2,4,2,1,3],\"coloraxis\":\"coloraxis\",\"size\":[40,47,42,20,31,31,21,31,42,42,34,24,57,43,49,39,47,44,26,29,45,43,23,37,58,52,29,33,55,19,37,25,21,58,38,20,26,24,40,23,56,33,43,18,56,39,22,27,49,49,54,29,27,53,53,30,42,26,22,56,28,57,55,21,43,56,55,28,31,29,45,37,22,50,39,23,54,30,51,34,51,41,21,19,33,44,39,44,34,45,40,32,56,35,58,50,20,28,25,50,53,19,32,28,25,36,55,23,50,39,41,19,27,42,54,39,18,27,28,41,45,39,49,35,21,50,20,50,31,36,40,52,40,42,51,55,39,24,18,53,50,51,57,29,29,35,33,24,56,51,21,52,56,27,31,32,54,51,51,40,35,42,45,22,43,49,30,58,55,47,44,23,37,27,29,50,21,31,38,55,33,24,47,39,34,42,34,37,30,32,23,24,59,36,23,45,47,41,19,35,31,37,22,27,25,29,37,23,41,40,25,18,25,22,42,51,40,24,52,43,32,32,21,53,27,59,59,32,41,50,38,31,35,36,53,19,20,19,53,33,57,37,51,44,35,29,33,19,50,58,29,23,22,48,24,46,52,19,18,49,43,46,34,57,40,25,22,32,55,20,53,51,31,38,35,49,32,54,47,33,51,26,51,54,43,37,47,29,47,50,28,30,36,27,52,41,31,53,44,59,35,38,34,34,19,27,43,45,20,40,25,32,20,49,29,55,42,28,47,51,22,57,21,31,23,25,55,24,31,42,21,47,54,34,46,45,44,34,46,30,43,26,56,57,43,37,57,46,26,34,54,35,20,53,54,45,55,48,44,54,26,22,38,45,34,22,29,58,49,34,25,22,59,25,42,26,51,31,57,51,34,39,37,30,28,40,28,32,34,50,36,58,54,53,45,52,27,20,43,29,42,53,40,51,22,43,25,55,22,51,31,50,52,35,33,56,27,57,27,46,56,43,22,28,24,37,44,51,58,37,22,53,51,42,58,34,20,34,52,18,36,39,33,29,22,58,24,58,22,20,56,52,26,43,45,27,27,46,58,50,20,55,55,23,26,55,51,41,46,37,40,53,26,29,49,54,49,59,41,57,51,34,56,49,39,36,57,57,32,21,47,53,36,23,29,57,43,20,53,45,32,24,55,52,47,49,27,42,22,31,38,39,34,57,54,25,44,25,34,51,20,25,49,48,57,59,29,57,24,42,43,47,23,22,30,25,30,34,38,27,52,25,28,55,28,34,21,58,45,21,42,37,32,37,19,32,40,27,55,47,38,18,33,31,44,40,35,32,49,18,57,25,56,22,47,49,34,37,40,36,27,27,19,43,30,29,43,24,36,39,30,36,22,26,48,41,21,59,28,47,30,44,43,41,54,53,37,21,40,51,48,37,44,46,18,52,36,36,26,59,59,56,41,21,45,31,55,59,55,21,25,45,56,29,43,48,47,32,35,35,42,26,27,46,20,20,58,42,53,31,49,51,30,29,56,39,54,40,43,35,59,48,45,55,52,53,46,36,23,27,48,22,27,52,27,40,34,52,36,36,25,30,42,45,25,18,18,54,52,32,30,51,48,31,34,22,59,50,44,23],\"sizemode\":\"area\",\"sizeref\":0.01638888888888889,\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[6.4,4.7,4.0,4.8,4.3,2.0,7.3,11.4,7.7,6.6,1.4,5.5,6.2,4.9,5.4,10.4,3.6,5.8,1.4,8.5,2.6,11.6,6.5,5.6,4.0,3.4,7.6,10.5,6.8,6.2,6.0,4.6,4.7,2.0,10.2,1.2,3.3,11.2,6.4,6.2,4.7,10.1,2.1,3.7,2.4,10.9,8.4,3.6,8.2,8.7,7.4,5.9,2.7,2.2,8.7,1.6,1.1,8.4,7.0,7.1,11.9,7.5,1.9,11.5,7.0,4.0,4.5,4.0,10.2,1.7,7.2,9.0,6.3,1.1,2.0,5.7,2.0,2.5,1.8,5.7,10.6,2.8,7.2,1.8,4.5,7.4,2.4,1.5,3.3,6.2,2.1,4.1,1.4,2.5,7.5,7.2,9.5,12.0,1.2,5.5,1.1,4.1,2.5,4.2,2.8,1.2,2.7,1.4,5.5,6.0,3.8,8.6,5.1,3.2,7.9,3.2,1.2,5.2,1.6,2.7,6.6,8.7,10.0,8.1,5.1,11.8,7.4,4.2,2.5,3.3,10.8,7.2,3.6,1.0,1.6,11.3,1.7,4.5,9.7,11.1,5.2,6.3,2.2,1.1,11.2,5.3,7.4,1.6,4.2,3.7,9.4,1.6,2.0,7.5,1.5,3.4,1.7,7.8,6.5,2.4,1.6,1.9,7.7,2.0,4.8,8.4,11.3,1.5,5.4,11.8,3.7,1.1,2.8,6.6,1.6,5.2,5.4,5.7,5.7,11.9,2.4,6.4,9.2,1.2,10.4,10.7,7.8,1.1,2.0,1.1,2.2,1.9,7.2,4.1,6.4,4.7,4.4,3.7,1.6,2.8,8.9,3.7,1.3,1.6,3.3,6.5,1.7,3.1,9.3,4.6,6.1,10.9,3.4,1.1,3.3,8.4,6.9,9.5,9.6,3.2,6.8,2.0,6.1,10.7,2.5,10.8,7.0,5.2,3.8,7.3,2.3,8.9,10.0,3.4,3.8,1.4,8.9,6.9,1.7,10.8,1.7,11.7,3.5,6.5,1.3,5.0,1.5,6.2,4.0,1.9,1.4,7.9,10.5,2.4,1.2,7.0,7.7,5.0,4.0,9.0,1.3,6.6,9.6,1.7,6.8,8.4,4.1,9.4,4.7,6.6,6.5,4.2,2.2,2.3,2.6,11.9,5.9,4.4,1.6,7.8,1.7,1.7,7.7,1.3,6.9,10.8,7.4,4.0,3.7,1.2,7.6,1.6,1.8,4.5,8.5,1.8,6.6,2.7,5.2,3.3,6.5,4.4,6.0,11.4,2.9,2.8,5.0,7.5,5.1,6.8,4.2,7.2,2.9,3.0,4.9,2.0,4.3,2.2,6.6,11.3,4.4,6.0,6.3,1.3,7.5,4.3,6.0,2.0,1.6,8.3,4.6,3.8,6.0,7.5,1.5,9.8,7.9,1.3,6.1,1.2,1.0,10.3,10.5,6.0,5.8,7.7,3.3,1.4,3.8,7.4,6.9,1.5,4.6,7.5,1.4,1.9,4.1,9.5,2.0,4.6,11.8,10.4,1.5,7.9,8.6,7.2,11.6,11.2,3.9,2.4,9.8,10.6,10.9,11.3,1.3,1.1,1.7,6.0,10.8,3.0,4.6,10.4,1.5,2.9,3.0,6.6,2.0,1.3,11.6,2.8,7.9,6.1,3.5,7.4,9.2,6.8,1.1,11.6,1.6,1.5,11.1,2.7,7.4,8.6,8.2,7.3,3.2,7.3,7.8,6.9,11.8,8.2,5.1,5.0,2.0,2.3,5.1,11.7,4.9,1.4,1.4,3.2,6.1,1.1,5.0,2.8,2.4,3.8,2.3,10.1,5.5,3.8,10.4,2.0,8.4,3.4,4.4,1.7,3.0,3.9,5.7,5.7,1.1,4.0,8.8,7.2,8.8,5.2,3.0,1.2,3.5,11.8,3.3,1.3,3.9,1.6,1.6,4.7,1.0,2.4,9.0,3.3,5.9,4.6,1.3,4.8,7.3,4.0,7.5,1.9,4.6,9.4,3.0,5.0,4.9,6.2,6.6,4.2,4.3,4.8,2.4,10.4,11.1,1.6,6.0,1.1,3.8,4.4,7.3,9.3,6.1,3.7,1.5,6.8,2.5,10.9,4.8,2.9,4.5,3.6,1.3,7.7,8.4,5.8,8.5,6.6,5.1,2.0,5.9,10.0,5.3,10.8,1.6,3.4,7.1,2.2,3.8,1.2,8.5,2.2,6.5,1.1,6.5,11.2,5.2,4.5,2.4,1.2,3.0,4.8,11.8,7.9,6.4,4.7,6.1,3.3,5.9,11.1,9.5,9.4,10.5,2.5,5.4,5.5,9.7,2.0,4.6,2.6,6.6,4.0,6.2,2.5,3.8,7.3,6.6,4.9,3.5,4.2,7.6,11.6,6.2,2.1,1.4,1.6,4.4,1.3,3.9,1.7,5.3,6.6,7.1,6.1,5.9,9.1,10.9,3.5,10.3,7.5,6.0,1.1,10.0,2.7,5.7,1.9,1.3,3.1,4.4,6.1,7.5,3.6,3.7,11.5,7.7,4.2,6.3,10.5,10.8,2.5,3.0,4.3,6.0,1.2,3.0,2.1,5.3,6.0,10.4,4.0,4.9,8.5,9.6,1.3,10.2,1.1,4.0,3.7,5.4,5.6,7.0,4.2,5.0,1.8,7.4,1.8,1.5,1.8,5.0,5.2,1.2,6.3,3.1,5.1,10.2,3.2,6.6,3.4,10.7,1.1,6.2,9.8,1.8,1.4,8.2,3.3,4.8,2.9,1.3,1.5,6.3,5.4,2.0,1.7,5.2,1.2,10.5,3.7,5.6,5.3,6.8,9.6,1.5,3.1,3.2,6.4,10.3,5.4,11.4,5.5,2.4,3.2,1.6,7.3,11.2,1.6,11.4,1.5,3.8,3.5,4.6,1.8,6.1,7.6,5.5,1.6,4.0,6.6,7.7,6.3,4.9,9.5,5.7,4.0,6.7,8.6,9.7,3.9,6.8,3.1,1.7,5.4],\"xaxis\":\"x\",\"y\":[1872,1331,761,1676,1367,940,1802,2956,2138,1957,435,1690,2303,1662,1754,2571,628,1431,558,2774,681,2803,2094,1401,1711,1073,2372,2409,2387,1899,1361,1660,1484,457,2499,580,755,2808,2312,1851,1464,2447,720,993,837,2476,2447,889,2623,2736,2180,1243,690,1101,2857,450,572,2796,2306,2269,2798,2292,493,2911,1982,1420,1705,773,2932,558,1808,2902,2347,585,476,1305,558,678,333,1254,2475,1035,2363,368,1311,2081,1003,345,839,2053,912,1474,501,1125,2169,2243,2916,2406,361,1526,389,1210,929,1781,1113,585,642,403,1754,1641,718,2447,1483,818,2156,651,409,1631,590,1018,2085,2484,2541,2686,1702,2858,2149,1439,678,751,2923,2056,1193,313,303,2528,375,1368,2876,2429,1510,2044,896,528,2417,1281,2289,385,1677,873,2583,315,741,2277,364,893,439,2102,2375,859,540,526,2067,469,1238,2993,2968,467,1370,2431,1124,487,935,1817,509,1660,1738,1471,1582,2853,1124,2109,2936,308,2984,2738,2014,379,602,402,917,477,1822,1287,2109,1512,1407,1116,549,971,2920,1153,327,463,961,2084,455,620,2606,1385,2108,2752,714,588,1175,2559,2282,2855,2873,603,2093,1007,1941,2556,690,2712,2185,1318,649,1946,1083,2855,2720,1059,636,369,2549,2142,585,2711,302,2764,761,2378,479,1542,590,2205,866,537,324,2332,2460,982,398,2352,1863,1655,1791,2613,490,2394,2954,359,2000,2849,1608,2766,1642,2160,1969,1360,1002,1014,639,2702,1666,1607,417,2029,403,530,2114,542,1820,2805,2136,1519,619,415,2199,360,497,1781,2660,481,2214,805,1641,748,2113,1505,2290,2443,1117,686,1232,2176,1226,2027,1507,2397,1054,820,1566,320,1737,827,2026,2590,1275,1489,2001,490,2007,1554,1707,574,420,2865,1534,727,1762,2001,375,2905,2292,561,2267,590,435,2718,2971,1533,1309,1974,1020,542,866,2314,2111,593,1230,1823,455,574,1326,2840,366,1325,2435,2900,341,2159,2539,1965,2464,2876,747,816,2765,2547,2514,2947,434,531,490,1875,2445,922,1767,2453,373,653,890,2041,925,461,2968,775,2231,1901,1055,2129,2663,2288,437,2798,323,571,2821,612,1960,2595,2618,2340,994,2291,2289,2366,2790,2918,1692,1532,1171,608,1293,2655,1549,454,416,716,2115,536,1482,1062,747,967,1033,2757,1238,1137,2672,309,2591,798,1341,408,728,915,1725,1295,505,1664,2540,1859,2852,1604,617,518,1114,2953,734,557,1160,436,587,1707,547,639,2696,938,1789,1694,583,1770,2349,1414,1921,541,1396,2452,697,1625,1657,2201,2089,1315,1759,1681,954,2717,2851,470,1873,417,739,1734,1882,2403,2279,948,594,1892,1176,2928,1500,918,1356,988,369,2017,2664,1291,2859,2398,1408,318,1740,2513,1767,2911,442,975,1984,1187,940,592,2780,1123,2364,535,1849,2623,1390,1646,689,466,801,1639,2629,1987,2206,1276,2087,937,1528,2672,2638,2867,2817,740,1307,1616,2633,362,1750,658,2155,1047,1984,1110,605,2082,2168,1633,625,1392,2037,2914,2245,1188,508,440,1272,462,1132,312,1537,2181,1928,2229,1757,2858,2571,606,2776,2216,1715,532,2430,625,1414,571,538,1191,1665,1975,1995,627,630,2767,1809,1500,1959,2538,2529,825,1131,1382,2244,545,922,660,1278,1928,2496,1323,1596,2927,2606,489,2911,395,1158,608,1476,1388,1826,1407,1475,351,2363,417,310,328,1614,1446,437,1988,1078,1483,2587,1142,2055,1198,2433,546,2074,2778,321,443,2597,723,1494,1197,314,565,2294,1627,1041,519,1632,365,2839,1028,1489,1368,2358,2464,387,947,1189,1858,2568,1544,2891,1699,1039,648,387,1937,2925,490,2776,545,689,706,1525,334,2105,2354,1718,325,1221,1859,2037,2098,1589,2424,1447,856,1898,2792,2422,1082,1965,942,431,1306],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Screen On Time (hours\\u002fday)\"},\"type\":\"log\"},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Battery Drain (mAh\\u002fday)\"}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"User Behavior Class\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0,\"itemsizing\":\"constant\"},\"title\":{\"text\":\"Battery Drain vs Screen Time by User Behavior Class\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('925bc5ee-1773-4f27-a14a-1f13dffb9165');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig = px.histogram(df, x='Age', color='Gender',\n",
        "                   title = 'Age Count for Men and Women')\n",
        "fig.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "SkhSQVrUb0y8",
        "outputId": "4dd703b8-cc5f-4de6-e4c4-6384370fb14f"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"9d7628a8-486c-4923-b8af-2204d66df027\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"9d7628a8-486c-4923-b8af-2204d66df027\")) {                    Plotly.newPlot(                        \"9d7628a8-486c-4923-b8af-2204d66df027\",                        [{\"alignmentgroup\":\"True\",\"bingroup\":\"x\",\"hovertemplate\":\"Gender=Male\\u003cbr\\u003eAge=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Male\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Male\",\"offsetgroup\":\"Male\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[40,42,20,31,31,42,24,43,58,52,29,33,25,21,58,26,24,40,23,33,43,18,39,49,49,29,53,30,26,22,56,55,43,56,55,31,37,22,39,41,19,44,39,44,45,35,58,50,20,53,19,28,25,36,55,19,42,39,18,41,35,21,50,31,40,42,51,39,18,53,51,29,35,33,24,56,51,21,32,54,51,51,40,42,45,22,30,58,47,44,23,21,38,55,33,24,42,37,23,24,36,47,19,22,27,25,29,23,41,18,25,22,51,40,24,43,32,32,27,59,41,50,38,31,35,53,53,51,44,35,29,33,19,22,52,18,57,25,32,55,20,51,38,35,49,54,47,51,51,43,37,47,50,28,30,52,41,44,35,27,43,40,20,29,51,23,55,54,44,34,46,30,43,56,43,46,26,34,54,45,26,22,45,34,22,34,22,42,26,57,51,34,39,30,28,28,32,36,58,54,53,52,20,29,42,53,40,51,50,35,56,46,56,43,24,37,51,58,37,22,53,51,42,58,20,34,18,39,33,22,58,24,58,56,52,26,43,45,46,50,55,55,23,51,46,37,40,29,57,51,34,56,36,21,47,23,57,53,32,52,47,27,22,31,39,34,54,25,44,25,51,20,25,48,59,24,47,30,30,52,28,55,45,42,32,27,55,47,18,31,44,40,32,18,57,22,49,36,27,29,24,36,30,48,41,21,59,28,44,43,21,51,48,37,44,18,52,59,56,21,45,59,55,21,25,43,47,42,27,46,53,49,30,29,56,39,35,59,48,45,52,53,46,36,23,48,22,27,52,40,34,30,42,45,25,18,18,54,32,30,31,22,59,44],\"xaxis\":\"x\",\"yaxis\":\"y\",\"type\":\"histogram\"},{\"alignmentgroup\":\"True\",\"bingroup\":\"x\",\"hovertemplate\":\"Gender=Female\\u003cbr\\u003eAge=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Female\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Female\",\"offsetgroup\":\"Female\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[47,31,21,42,34,57,49,39,47,44,26,29,45,43,23,37,55,19,37,38,20,56,56,22,27,54,27,53,42,28,57,21,28,29,45,50,23,54,30,51,34,51,21,33,34,40,32,56,28,25,50,32,23,50,39,41,27,54,27,28,45,39,49,20,50,36,52,40,55,24,50,57,29,52,56,27,31,35,43,49,55,37,27,29,50,31,47,39,34,34,30,32,59,23,45,41,35,31,37,37,40,25,42,52,21,53,59,32,36,19,20,19,33,57,37,50,58,29,23,48,24,46,19,49,43,46,34,40,22,53,31,32,33,26,54,47,29,36,27,31,53,59,38,34,34,19,45,20,25,32,49,55,42,28,47,22,57,21,31,25,24,31,42,21,47,34,46,45,26,57,37,57,35,20,53,54,55,48,44,54,38,29,58,49,25,59,25,51,31,37,40,34,50,45,27,43,51,22,43,25,55,22,31,52,33,27,57,27,22,28,44,34,52,36,29,22,20,27,27,58,20,26,55,41,53,26,49,54,49,59,41,49,39,57,57,32,53,36,29,43,20,45,24,55,49,42,38,57,34,49,57,29,57,42,43,23,22,25,34,38,27,25,28,34,21,58,21,37,37,19,32,40,38,33,35,49,25,56,47,34,37,40,27,19,43,30,43,39,36,22,26,47,30,41,54,53,37,40,46,36,36,26,59,41,31,55,45,56,29,48,32,35,35,26,20,20,58,42,31,51,54,40,43,55,27,27,52,36,36,25,52,51,48,34,50,23],\"xaxis\":\"x\",\"yaxis\":\"y\",\"type\":\"histogram\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Age\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"legend\":{\"title\":{\"text\":\"Gender\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Age Count for Men and Women\"},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('9d7628a8-486c-4923-b8af-2204d66df027');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "numerics = df.select_dtypes(include='number')\n",
        "correlation_matrix = numerics.corr()\n",
        "fig = px.imshow(correlation_matrix, text_auto=True)\n",
        "fig.update_layout(\n",
        "    width=1000,\n",
        "    height=800,\n",
        "    title=\"Correlation Heatmap\",\n",
        "    font=dict(size=14)\n",
        ")\n",
        "\n",
        "fig.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 817
        },
        "id": "l31j7-fhb5vl",
        "outputId": "edb904a2-e2d2-44b1-adc2-b59e0b63cf41"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"e74ef8db-aa82-4d66-ad90-fa94feca8a76\" class=\"plotly-graph-div\" style=\"height:800px; width:1000px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"e74ef8db-aa82-4d66-ad90-fa94feca8a76\")) {                    Plotly.newPlot(                        \"e74ef8db-aa82-4d66-ad90-fa94feca8a76\",                        [{\"coloraxis\":\"coloraxis\",\"name\":\"0\",\"texttemplate\":\"%{z}\",\"x\":[\"User ID\",\"App Usage Time (min\\u002fday)\",\"Screen On Time (hours\\u002fday)\",\"Battery Drain (mAh\\u002fday)\",\"Number of Apps Installed\",\"Data Usage (MB\\u002fday)\",\"Age\",\"User Behavior Class\"],\"y\":[\"User ID\",\"App Usage Time (min\\u002fday)\",\"Screen On Time (hours\\u002fday)\",\"Battery Drain (mAh\\u002fday)\",\"Number of Apps Installed\",\"Data Usage (MB\\u002fday)\",\"Age\",\"User Behavior Class\"],\"z\":[[1.0,-0.02495728432016452,-0.014286682397760294,-0.019376777422472572,-0.023914197214718793,-0.014526918513797922,0.04518849096560537,-0.016241957295296785],[-0.02495728432016452,1.0,0.9503330357253559,0.9563849528302287,0.9552528344225479,0.942307527662192,0.004382235233494258,0.9704976788485866],[-0.014286682397760294,0.9503330357253559,1.0,0.9489831361266124,0.946975148790079,0.9413220178022372,0.017232227932845703,0.9645808825388907],[-0.019376777422472572,0.9563849528302287,0.9489831361266124,1.0,0.9618532619047168,0.9322757642560356,-0.002722411868857505,0.9785871211990457],[-0.023914197214718793,0.9552528344225479,0.946975148790079,0.9618532619047168,1.0,0.9347999754105196,0.0040340417125751754,0.9812551430848148],[-0.014526918513797922,0.942307527662192,0.9413220178022372,0.9322757642560356,0.9347999754105196,1.0,0.003998949266862004,0.9467338349891816],[0.04518849096560537,0.004382235233494258,0.017232227932845703,-0.002722411868857505,0.0040340417125751754,0.003998949266862004,1.0,-0.0005625313959512332],[-0.016241957295296785,0.9704976788485866,0.9645808825388907,0.9785871211990457,0.9812551430848148,0.9467338349891816,-0.0005625313959512332,1.0]],\"type\":\"heatmap\",\"xaxis\":\"x\",\"yaxis\":\"y\",\"hovertemplate\":\"x: %{x}\\u003cbr\\u003ey: %{y}\\u003cbr\\u003ecolor: %{z}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"scaleanchor\":\"y\",\"constrain\":\"domain\"},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"autorange\":\"reversed\",\"constrain\":\"domain\"},\"coloraxis\":{\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"margin\":{\"t\":60},\"font\":{\"size\":14},\"width\":1000,\"height\":800,\"title\":{\"text\":\"Correlation Heatmap\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('e74ef8db-aa82-4d66-ad90-fa94feca8a76');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "id": "yoyofv279SBt",
        "outputId": "62dbdedb-eae2-442c-f45b-9bbd5c3b6ecb"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   User ID    Device Model Operating System  App Usage Time (min/day)  \\\n",
              "0        1  Google Pixel 5          Android                       393   \n",
              "1        2       OnePlus 9          Android                       268   \n",
              "2        3    Xiaomi Mi 11          Android                       154   \n",
              "3        4  Google Pixel 5          Android                       239   \n",
              "4        5       iPhone 12              iOS                       187   \n",
              "\n",
              "   Screen On Time (hours/day)  Battery Drain (mAh/day)  \\\n",
              "0                         6.4                     1872   \n",
              "1                         4.7                     1331   \n",
              "2                         4.0                      761   \n",
              "3                         4.8                     1676   \n",
              "4                         4.3                     1367   \n",
              "\n",
              "   Number of Apps Installed  Data Usage (MB/day)  Age  Gender  \\\n",
              "0                        67                 1122   40    Male   \n",
              "1                        42                  944   47  Female   \n",
              "2                        32                  322   42    Male   \n",
              "3                        56                  871   20    Male   \n",
              "4                        58                  988   31  Female   \n",
              "\n",
              "   User Behavior Class Age_Category Screen_Time  \n",
              "0                    4  Middle_Aged    Moderate  \n",
              "1                    3  Middle_Aged         Low  \n",
              "2                    2  Middle_Aged         Low  \n",
              "3                    3  Young Adult         Low  \n",
              "4                    3        Adult         Low  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7074f1fd-3845-4a4a-a630-1db44faec256\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>User ID</th>\n",
              "      <th>Device Model</th>\n",
              "      <th>Operating System</th>\n",
              "      <th>App Usage Time (min/day)</th>\n",
              "      <th>Screen On Time (hours/day)</th>\n",
              "      <th>Battery Drain (mAh/day)</th>\n",
              "      <th>Number of Apps Installed</th>\n",
              "      <th>Data Usage (MB/day)</th>\n",
              "      <th>Age</th>\n",
              "      <th>Gender</th>\n",
              "      <th>User Behavior Class</th>\n",
              "      <th>Age_Category</th>\n",
              "      <th>Screen_Time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Google Pixel 5</td>\n",
              "      <td>Android</td>\n",
              "      <td>393</td>\n",
              "      <td>6.4</td>\n",
              "      <td>1872</td>\n",
              "      <td>67</td>\n",
              "      <td>1122</td>\n",
              "      <td>40</td>\n",
              "      <td>Male</td>\n",
              "      <td>4</td>\n",
              "      <td>Middle_Aged</td>\n",
              "      <td>Moderate</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>OnePlus 9</td>\n",
              "      <td>Android</td>\n",
              "      <td>268</td>\n",
              "      <td>4.7</td>\n",
              "      <td>1331</td>\n",
              "      <td>42</td>\n",
              "      <td>944</td>\n",
              "      <td>47</td>\n",
              "      <td>Female</td>\n",
              "      <td>3</td>\n",
              "      <td>Middle_Aged</td>\n",
              "      <td>Low</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Xiaomi Mi 11</td>\n",
              "      <td>Android</td>\n",
              "      <td>154</td>\n",
              "      <td>4.0</td>\n",
              "      <td>761</td>\n",
              "      <td>32</td>\n",
              "      <td>322</td>\n",
              "      <td>42</td>\n",
              "      <td>Male</td>\n",
              "      <td>2</td>\n",
              "      <td>Middle_Aged</td>\n",
              "      <td>Low</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Google Pixel 5</td>\n",
              "      <td>Android</td>\n",
              "      <td>239</td>\n",
              "      <td>4.8</td>\n",
              "      <td>1676</td>\n",
              "      <td>56</td>\n",
              "      <td>871</td>\n",
              "      <td>20</td>\n",
              "      <td>Male</td>\n",
              "      <td>3</td>\n",
              "      <td>Young Adult</td>\n",
              "      <td>Low</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>iPhone 12</td>\n",
              "      <td>iOS</td>\n",
              "      <td>187</td>\n",
              "      <td>4.3</td>\n",
              "      <td>1367</td>\n",
              "      <td>58</td>\n",
              "      <td>988</td>\n",
              "      <td>31</td>\n",
              "      <td>Female</td>\n",
              "      <td>3</td>\n",
              "      <td>Adult</td>\n",
              "      <td>Low</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7074f1fd-3845-4a4a-a630-1db44faec256')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7074f1fd-3845-4a4a-a630-1db44faec256 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7074f1fd-3845-4a4a-a630-1db44faec256');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-672f16c0-d387-4b60-a23b-695b3b910832\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-672f16c0-d387-4b60-a23b-695b3b910832')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-672f16c0-d387-4b60-a23b-695b3b910832 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 700,\n  \"fields\": [\n    {\n      \"column\": \"User ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202,\n        \"min\": 1,\n        \"max\": 700,\n        \"num_unique_values\": 700,\n        \"samples\": [\n          159,\n          501,\n          397\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"OnePlus 9\",\n          \"Samsung Galaxy S21\",\n          \"Xiaomi Mi 11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Operating System\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"iOS\",\n          \"Android\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"App Usage Time (min/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 177,\n        \"min\": 30,\n        \"max\": 598,\n        \"num_unique_values\": 387,\n        \"samples\": [\n          582,\n          402\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Screen On Time (hours/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.068583910273257,\n        \"min\": 1.0,\n        \"max\": 12.0,\n        \"num_unique_values\": 108,\n        \"samples\": [\n          10.8,\n          1.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Battery Drain (mAh/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 819,\n        \"min\": 302,\n        \"max\": 2993,\n        \"num_unique_values\": 628,\n        \"samples\": [\n          2597,\n          1632\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Apps Installed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26,\n        \"min\": 10,\n        \"max\": 99,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          79,\n          67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data Usage (MB/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 640,\n        \"min\": 102,\n        \"max\": 2497,\n        \"num_unique_values\": 585,\n        \"samples\": [\n          839,\n          765\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 18,\n        \"max\": 59,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          56,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"User Behavior Class\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age_Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Young Adult\",\n          \"Senior\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Screen_Time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Low\",\n          \"Very High\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig = px.scatter(df, x='App Usage Time (min/day)', y='Age')\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "fyvCISh3b7k9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "outputId": "f53a7abe-e8d1-4d60-d5c2-ad3e7b808244"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"9ed3424f-3752-4066-be83-0d747f980fad\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"9ed3424f-3752-4066-be83-0d747f980fad\")) {                    Plotly.newPlot(                        \"9ed3424f-3752-4066-be83-0d747f980fad\",                        [{\"hovertemplate\":\"App Usage Time (min\\u002fday)=%{x}\\u003cbr\\u003eAge=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[393,268,154,239,187,99,350,543,340,424,53,215,462,215,189,503,132,299,81,577,93,576,423,292,216,91,444,512,452,412,260,197,278,46,593,32,122,522,473,398,240,576,120,152,138,502,558,138,580,589,452,245,125,97,516,68,64,539,428,325,522,309,79,545,459,225,257,134,516,82,452,521,457,31,47,229,34,173,78,230,565,172,330,39,223,404,151,34,137,301,116,291,84,134,411,326,550,516,59,225,41,183,174,274,166,66,152,54,187,216,95,488,295,136,471,121,75,220,82,97,388,529,584,529,227,535,332,252,125,97,540,320,176,79,83,555,66,237,497,516,219,448,156,68,524,188,443,52,228,149,523,42,120,329,68,158,86,339,304,131,64,53,442,32,278,540,595,35,225,587,92,46,153,368,51,279,255,193,207,539,151,474,544,73,597,498,402,75,130,42,134,79,432,262,473,202,215,151,80,126,495,127,88,69,100,301,78,163,539,278,451,481,133,41,152,553,402,555,499,101,433,133,351,532,92,511,384,193,132,360,159,495,537,129,132,37,524,425,64,573,45,564,162,451,30,202,71,314,168,75,42,441,523,100,52,397,424,272,201,570,64,334,518,70,334,563,181,584,208,381,426,284,105,179,122,501,269,230,85,411,73,39,386,49,411,534,314,211,121,84,448,55,59,226,580,65,458,170,264,122,420,267,469,541,155,106,243,410,285,397,230,341,132,130,281,74,299,116,408,508,227,274,347,76,445,203,199,48,88,541,233,176,191,461,37,531,473,30,306,64,75,597,529,290,256,308,156,62,156,303,463,60,225,379,53,30,291,488,74,230,517,557,78,321,579,382,516,598,102,165,558,561,511,560,69,44,65,458,525,106,188,493,84,104,102,349,98,72,563,119,311,337,168,331,589,472,78,517,41,49,522,97,411,566,559,478,147,395,357,405,501,575,257,270,116,98,264,572,202,83,32,168,416,46,201,130,98,105,94,540,266,140,534,46,581,105,221,41,105,123,260,223,66,231,555,378,546,234,152,34,179,591,120,88,143,74,74,234,56,174,523,123,216,290,68,265,414,238,429,39,248,541,139,289,210,412,318,258,258,189,155,528,549,78,444,80,131,228,416,586,416,152,87,329,107,493,182,102,274,143,66,420,582,200,493,348,238,33,267,492,241,567,36,110,466,126,120,64,574,119,350,69,438,506,272,224,99,44,175,228,589,339,431,190,389,139,289,593,576,592,567,170,242,275,544,50,236,139,383,172,455,157,173,405,387,201,142,198,361,553,408,121,71,46,290,60,116,86,291,404,441,444,211,537,519,94,554,381,257,47,527,148,191,71,73,149,197,328,424,111,159,580,379,217,447,512,511,140,114,192,325,83,122,138,182,425,580,203,258,551,507,57,553,49,106,119,288,225,342,292,218,64,453,42,36,55,210,227,47,461,94,216,496,138,318,96,510,83,417,538,63,50,502,105,186,174,89,66,389,186,149,69,206,49,594,104,262,278,463,505,50,138,130,469,555,198,529,205,170,160,81,468,500,37,522,81,141,115,298,33,307,380,190,75,218,412,335,387,261,541,195,178,378,505,564,92,316,99,62,212],\"xaxis\":\"x\",\"y\":[40,47,42,20,31,31,21,31,42,42,34,24,57,43,49,39,47,44,26,29,45,43,23,37,58,52,29,33,55,19,37,25,21,58,38,20,26,24,40,23,56,33,43,18,56,39,22,27,49,49,54,29,27,53,53,30,42,26,22,56,28,57,55,21,43,56,55,28,31,29,45,37,22,50,39,23,54,30,51,34,51,41,21,19,33,44,39,44,34,45,40,32,56,35,58,50,20,28,25,50,53,19,32,28,25,36,55,23,50,39,41,19,27,42,54,39,18,27,28,41,45,39,49,35,21,50,20,50,31,36,40,52,40,42,51,55,39,24,18,53,50,51,57,29,29,35,33,24,56,51,21,52,56,27,31,32,54,51,51,40,35,42,45,22,43,49,30,58,55,47,44,23,37,27,29,50,21,31,38,55,33,24,47,39,34,42,34,37,30,32,23,24,59,36,23,45,47,41,19,35,31,37,22,27,25,29,37,23,41,40,25,18,25,22,42,51,40,24,52,43,32,32,21,53,27,59,59,32,41,50,38,31,35,36,53,19,20,19,53,33,57,37,51,44,35,29,33,19,50,58,29,23,22,48,24,46,52,19,18,49,43,46,34,57,40,25,22,32,55,20,53,51,31,38,35,49,32,54,47,33,51,26,51,54,43,37,47,29,47,50,28,30,36,27,52,41,31,53,44,59,35,38,34,34,19,27,43,45,20,40,25,32,20,49,29,55,42,28,47,51,22,57,21,31,23,25,55,24,31,42,21,47,54,34,46,45,44,34,46,30,43,26,56,57,43,37,57,46,26,34,54,35,20,53,54,45,55,48,44,54,26,22,38,45,34,22,29,58,49,34,25,22,59,25,42,26,51,31,57,51,34,39,37,30,28,40,28,32,34,50,36,58,54,53,45,52,27,20,43,29,42,53,40,51,22,43,25,55,22,51,31,50,52,35,33,56,27,57,27,46,56,43,22,28,24,37,44,51,58,37,22,53,51,42,58,34,20,34,52,18,36,39,33,29,22,58,24,58,22,20,56,52,26,43,45,27,27,46,58,50,20,55,55,23,26,55,51,41,46,37,40,53,26,29,49,54,49,59,41,57,51,34,56,49,39,36,57,57,32,21,47,53,36,23,29,57,43,20,53,45,32,24,55,52,47,49,27,42,22,31,38,39,34,57,54,25,44,25,34,51,20,25,49,48,57,59,29,57,24,42,43,47,23,22,30,25,30,34,38,27,52,25,28,55,28,34,21,58,45,21,42,37,32,37,19,32,40,27,55,47,38,18,33,31,44,40,35,32,49,18,57,25,56,22,47,49,34,37,40,36,27,27,19,43,30,29,43,24,36,39,30,36,22,26,48,41,21,59,28,47,30,44,43,41,54,53,37,21,40,51,48,37,44,46,18,52,36,36,26,59,59,56,41,21,45,31,55,59,55,21,25,45,56,29,43,48,47,32,35,35,42,26,27,46,20,20,58,42,53,31,49,51,30,29,56,39,54,40,43,35,59,48,45,55,52,53,46,36,23,27,48,22,27,52,27,40,34,52,36,36,25,30,42,45,25,18,18,54,52,32,30,51,48,31,34,22,59,50,44,23],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"App Usage Time (min\\u002fday)\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Age\"}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('9ed3424f-3752-4066-be83-0d747f980fad');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Let's examine if younger people (aged<40) have a higher app usage time than older ones (aged 40 and above)"
      ],
      "metadata": {
        "id": "CwtML8tFMAhq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "under_40_group = df[df['Age'] < 40]['App Usage Time (min/day)']\n",
        "over_40_group = df[df['Age'] >= 40]['App Usage Time (min/day)']"
      ],
      "metadata": {
        "id": "L9ZeXJJIMQJK"
      },
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "from statsmodels.stats.weightstats import ztest as ztest\n",
        "z_stat, p_value = ztest(under_40_group, over_40_group, value=0)\n",
        "print(\"Z-statistic:\", z_stat)\n",
        "print(\"P-value:\", p_value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iwiayd_MN7MB",
        "outputId": "4a750694-8fba-4614-9d66-e691c20e5be8"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Z-statistic: -0.1434849003066978\n",
            "P-value: 0.8859072356650028\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "As the hypothesis test indicates, the p-value is higher than 0.05. Given the 95% confidence level, we fail to reject the null hypothesis. This means that the difference in app usage time between younger and older people is not statistically significant."
      ],
      "metadata": {
        "id": "T8_9LK0NQhLF"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Machine Learning"
      ],
      "metadata": {
        "id": "1iQ_1FbHcETa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X = df[['Screen On Time (hours/day)',    # In order to apply linear regression, we nned to split the data into a features(X) and target(y).\n",
        "       'Battery Drain (mAh/day)',\n",
        "       'Number of Apps Installed',\n",
        "       'Data Usage (MB/day)',\n",
        "       'Age']]\n",
        "y = df['App Usage Time (min/day)']"
      ],
      "metadata": {
        "id": "0nMgfBSucGpI"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split    #split the data to test and train\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=12)\n"
      ],
      "metadata": {
        "id": "UxeoM6LAcIRM"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(X_train.shape,y_train.shape)\n",
        "print(X_test.shape,y_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uHghK_ZEcJ-N",
        "outputId": "1521485e-f1c5-4084-8f30-bc25a30328bd"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(560, 5) (560,)\n",
            "(140, 5) (140,)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "# Initialize the StandardScaler to standardize features\n",
        "scaler = StandardScaler()\n",
        "# Fit the scaler to the training data and transform it to standardize the features\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "# Apply the same transformation to the test data\n",
        "X_test_scaled = scaler.transform(X_test)\n",
        "# Initialize the LinearRegression model\n",
        "reg = LinearRegression()\n",
        "# Train the model using the scaled training data and fit the model to the scaled training data\n",
        "reg.fit(X_train,y_train)\n",
        "# Display the trained model\n",
        "reg"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 91
        },
        "id": "QJ_XzFf2cLx8",
        "outputId": "95511032-32c1-40c5-8b81-7243c8987d92"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-1 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-1 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-1 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-1 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-1 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-1 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-1 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-1 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(reg.coef_) # Showing the coefficients\n",
        "print(reg.intercept_) # Showing the intercept\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5HQWH2B7cNxx",
        "outputId": "062acaeb-9e04-47fb-8a31-8d55abcfe409"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[13.47001863  0.05787925  1.95415362  0.05515842  0.02199205]\n",
            "-38.21017402580259\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The above coefficients indicate the following:\n",
        "\n",
        "Screen On Time (hours/day) has the largest coefficient (13.47). This suggests that for each unit increase in screen on time (measured in hours per day), the predicted app usage time (in minutes per day) increases by about 13.47 minutes, all else being equal.\n",
        "\n",
        "Number of Apps Installed has the second-largest coefficient (1.95). This implies that for each additional app installed, the predicted app usage time increases by 1.95 minutes, assuming other factors remain constant.\n",
        "\n",
        "Age has the smallest coefficient (0.02), which suggests that age has a much smaller impact on app usage time, with each year of age corresponding to a very small increase in app usage time (only 0.02 minutes)."
      ],
      "metadata": {
        "id": "5_lk1SQ_e59B"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import statsmodels.api as sm\n",
        "\n",
        "# Add constant to the feature matrix for intercept\n",
        "X_with_const = sm.add_constant(X)\n",
        "\n",
        "# Fit the model\n",
        "model = sm.OLS(y, X_with_const)\n",
        "results = model.fit()\n",
        "\n",
        "# Print the detailed summary\n",
        "print(results.summary())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7fZd25JlWUof",
        "outputId": "e7cc2288-faae-44a1-90b8-d8a8b0916c70"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                               OLS Regression Results                               \n",
            "====================================================================================\n",
            "Dep. Variable:     App Usage Time (min/day)   R-squared:                       0.945\n",
            "Model:                                  OLS   Adj. R-squared:                  0.944\n",
            "Method:                       Least Squares   F-statistic:                     1181.\n",
            "Date:                      Wed, 04 Dec 2024   Prob (F-statistic):               0.00\n",
            "Time:                              01:54:45   Log-Likelihood:                -3602.6\n",
            "No. Observations:                       700   AIC:                             7227.\n",
            "Df Residuals:                           689   BIC:                             7277.\n",
            "Df Model:                                10                                         \n",
            "Covariance Type:                  nonrobust                                         \n",
            "===================================================================================================\n",
            "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
            "---------------------------------------------------------------------------------------------------\n",
            "const                             -33.0415      7.152     -4.620      0.000     -47.084     -18.999\n",
            "Screen On Time (hours/day)         12.4390      1.961      6.344      0.000       8.589      16.289\n",
            "Battery Drain (mAh/day)             0.0636      0.008      7.956      0.000       0.048       0.079\n",
            "Number of Apps Installed            1.7233      0.242      7.113      0.000       1.248       2.199\n",
            "Data Usage (MB/day)                 0.0612      0.008      7.532      0.000       0.045       0.077\n",
            "Age                                 0.0001      0.132      0.001      0.999      -0.260       0.260\n",
            "Device Model_OnePlus 9             -3.2957      5.073     -0.650      0.516     -13.257       6.665\n",
            "Device Model_Samsung Galaxy S21    -9.3887      5.073     -1.851      0.065     -19.349       0.572\n",
            "Device Model_Xiaomi Mi 11          -8.3303      4.961     -1.679      0.094     -18.071       1.410\n",
            "Device Model_iPhone 12             -3.2764      2.475     -1.324      0.186      -8.136       1.584\n",
            "Operating System_iOS               -3.2764      2.475     -1.324      0.186      -8.136       1.584\n",
            "Gender_Female                       5.8062      3.190      1.820      0.069      -0.457      12.070\n",
            "==============================================================================\n",
            "Omnibus:                        0.329   Durbin-Watson:                   2.064\n",
            "Prob(Omnibus):                  0.848   Jarque-Bera (JB):                0.428\n",
            "Skew:                           0.027   Prob(JB):                        0.807\n",
            "Kurtosis:                       2.891   Cond. No.                     2.29e+19\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The smallest eigenvalue is 5.63e-30. This might indicate that there are\n",
            "strong multicollinearity problems or that the design matrix is singular.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The results indicate that Screen On Time, Battery Drain, Number of Apps Installed, and Data Usage have a significant impact on App Usage Time at a 95% confidence interval, as their p-values are below the 0.05 threshold. Conversely, variables such as Age, Device Model, Gender, and Operating System do not show a statistically significant impact on App Usage Time at this confidence level, as their p-values exceed 0.05."
      ],
      "metadata": {
        "id": "6J2ikqF7qyPQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Extract the actual value of app usage time for the first instance in the test set\n",
        "new_app_usage1 = y_test.iloc[:1].values[0]\n",
        "print(f\"Real app usage  - {new_app_usage1}\")\n",
        "# Predict app usage time for the first instance in the test set and round to 2 decimal places\n",
        "app_usage_prediction = reg.predict(new_app_usage)[0].round(2)\n",
        "print(f\"predicted app usage - {app_usage_prediction}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qOX2_pVDcR3q",
        "outputId": "9eade690-5856-49ed-9a97-961d63a1e77d"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Real app usage  - 523\n",
            "predicted app usage - 503.04\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "abs_error = new_app_usage1 - app_usage_prediction\n",
        "print(f\"the absolute error is {abs_error}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "G8UTtb0ocTsf",
        "outputId": "b126d365-0d8a-4910-9429-8c5a1ddfeac6"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "the absolute error is 19.95999999999998\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(f\"Score (R2) on Train set is {reg.score(X_train, y_train)}\")\n",
        "print(f\"Score (R2) on Test set is {reg.score(X_test, y_test)}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z7gLRksMcVfn",
        "outputId": "1f4e4a6d-0cfe-490c-882c-5e6ee90896a6"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Score (R2) on Train set is 0.9451001542153791\n",
            "Score (R2) on Test set is 0.9392024108205014\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Because the\n",
        "R^2 values for the train set (0.945) and the test set (0.939) are very close, we can conclude that the model is performing well and generalizes effectively to unseen data without significant overfitting."
      ],
      "metadata": {
        "id": "8OorXITRtZCF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = reg.predict(X_test)\n",
        "y_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CaroFv2KcXJl",
        "outputId": "640193ba-6d25-4e4e-d04f-549f7ef079bc"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([503.0428863 , 268.06491125,  66.99227647, 400.98750895,\n",
              "       557.50491623, 283.66429753, 532.000427  , 130.26543437,\n",
              "        51.26411885, 276.72556753, 381.42680882, 401.90222637,\n",
              "        47.26371873, 261.4204421 , 500.40811329, 547.91178905,\n",
              "       161.7302749 , 239.10522206,  41.98238759, 386.72931729,\n",
              "        43.06745397,  55.73106686, 158.88882183, 366.73149321,\n",
              "        40.44558692,  39.08730249, 537.3588083 , 299.38070647,\n",
              "       149.4371805 , 294.53017326, 387.72810207, 552.09082424,\n",
              "       385.25752855, 286.29528637, 544.01859601, 371.7548992 ,\n",
              "       151.75549762,  42.92583287, 216.11247443, 158.97236588,\n",
              "        30.66800619, 373.7472579 , 258.80945326, 143.74062949,\n",
              "       151.49047676,  39.05948683, 130.52967725, 279.05637201,\n",
              "       389.53947212, 373.13418572, 240.00296694, 535.17666546,\n",
              "       401.26159838, 146.14594862, 393.41006434, 537.05258368,\n",
              "       382.58079698, 145.12011379,  50.43194412,  51.01974693,\n",
              "       547.38125265, 256.67743704, 125.79948294,  57.53181285,\n",
              "       557.22937206, 540.08648921, 519.01560884,  37.73966996,\n",
              "       261.29337649, 124.31432069, 505.49986594, 245.85844643,\n",
              "       168.20932984, 417.23299744,  46.42037209, 120.59334508,\n",
              "       592.72370326, 135.32320262, 377.88625155,  64.45074231,\n",
              "       226.71777387, 127.62829546, 280.43186552, 167.28470452,\n",
              "       250.00899026, 378.7369069 , 147.06407497, 126.17881464,\n",
              "       391.09740695, 153.40663553, 259.04626911, 532.09567809,\n",
              "       520.54619433,  50.73424229, 563.52047306, 178.20987672,\n",
              "       391.86914256,  48.72933227, 253.677083  , 281.36697091,\n",
              "       122.27089347, 111.29858948, 417.17338722, 548.61691648,\n",
              "       264.5745956 , 138.2001057 , 277.85577127, 274.02388405,\n",
              "        64.55469942,  61.92162152, 585.85187594, 360.22475461,\n",
              "        41.57645694, 504.34759219,  37.19462841,  56.36888081,\n",
              "       274.63152415,  44.30630172, 507.72998455,  97.75847085,\n",
              "       239.22783476, 363.02020689, 331.36699256, 147.44098119,\n",
              "       171.71661542, 104.08644186, 122.52435327, 545.6964752 ,\n",
              "       569.98379682, 120.40574561,  53.86964458, 383.20793947,\n",
              "       416.31108942,  39.47608271, 264.63602599, 272.72130102,\n",
              "       251.73384418,  53.45494463, 139.93385172, 538.17694192])"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mean_abs_error = (y_pred - y_test).mean()\n",
        "mean_sqd_error = ((y_pred - y_test)** 2).mean()\n",
        "print(f\"The MAE is {mean_abs_error}\")\n",
        "print(f\"The MSE is {mean_sqd_error}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AZCaSgnvcYwl",
        "outputId": "aca8c399-98c9-4786-b1ea-312ca06b3f82"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The MAE is 5.6430710458851685\n",
            "The MSE is 1820.1508143741694\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The Mean Absolute Error (MAE) of 5.64 indicates that, on average, the model's predictions deviate from the actual values by approximately 5.64 minutes of app usage time per day. The Mean Squared Error (MSE) of 1820.15 shows the average squared difference between predicted and actual values, which provides more weight to larger errors. Together, these metrics suggest the model's prediction accuracy, with the MAE offering an intuitive interpretation of average error magnitude and the MSE emphasizing any larger discrepancies in the predictions."
      ],
      "metadata": {
        "id": "3r4WSp6RuaqJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(np.var(y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A2szsm7CcaoP",
        "outputId": "31c1b6b4-a2bc-4e54-cf57-a63656804d6b"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "29937.87811224488\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The variance of y_test is 29,937.88, which represents the total variability in the target variable (app usage time) in the test dataset. In comparison, the Mean Squared Error (MSE) of 1,820.15 is significantly smaller. This indicates that the model explains a large portion of the variability in the data and that its prediction errors are relatively small compared to the overall variability of the target variable"
      ],
      "metadata": {
        "id": "GwL75ODTucw0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Let's see if we can improve our model by incorporating OneHotEncoding for Categorical variabels"
      ],
      "metadata": {
        "id": "qayTAPbfp8EV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import OneHotEncoder\n",
        "ohe = OneHotEncoder(sparse_output = False)\n",
        "ohe_values = ohe.fit_transform(df[['Device Model','Operating System','Gender']])\n",
        "ohe_values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W9dhmxFWp7d9",
        "outputId": "602827de-4888-4e97-d758-616de750d8d8"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1., 0., 0., ..., 0., 0., 1.],\n",
              "       [0., 1., 0., ..., 0., 1., 0.],\n",
              "       [0., 0., 0., ..., 0., 0., 1.],\n",
              "       ...,\n",
              "       [1., 0., 0., ..., 0., 1., 0.],\n",
              "       [0., 0., 1., ..., 0., 0., 1.],\n",
              "       [0., 1., 0., ..., 0., 1., 0.]])"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ohe_df = pd.DataFrame(ohe_values,columns = ohe.get_feature_names_out())\n",
        "ohe_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 259
        },
        "id": "xY5-Uh9zsBmd",
        "outputId": "bcd72e49-7449-479a-ab57-4921f472f271"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Device Model_Google Pixel 5  Device Model_OnePlus 9  \\\n",
              "0                          1.0                     0.0   \n",
              "1                          0.0                     1.0   \n",
              "2                          0.0                     0.0   \n",
              "3                          1.0                     0.0   \n",
              "4                          0.0                     0.0   \n",
              "\n",
              "   Device Model_Samsung Galaxy S21  Device Model_Xiaomi Mi 11  \\\n",
              "0                              0.0                        0.0   \n",
              "1                              0.0                        0.0   \n",
              "2                              0.0                        1.0   \n",
              "3                              0.0                        0.0   \n",
              "4                              0.0                        0.0   \n",
              "\n",
              "   Device Model_iPhone 12  Operating System_Android  Operating System_iOS  \\\n",
              "0                     0.0                       1.0                   0.0   \n",
              "1                     0.0                       1.0                   0.0   \n",
              "2                     0.0                       1.0                   0.0   \n",
              "3                     0.0                       1.0                   0.0   \n",
              "4                     1.0                       0.0                   1.0   \n",
              "\n",
              "   Gender_Female  Gender_Male  \n",
              "0            0.0          1.0  \n",
              "1            1.0          0.0  \n",
              "2            0.0          1.0  \n",
              "3            0.0          1.0  \n",
              "4            1.0          0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-43a49d71-0169-4260-b34a-f75a016ba022\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Device Model_Google Pixel 5</th>\n",
              "      <th>Device Model_OnePlus 9</th>\n",
              "      <th>Device Model_Samsung Galaxy S21</th>\n",
              "      <th>Device Model_Xiaomi Mi 11</th>\n",
              "      <th>Device Model_iPhone 12</th>\n",
              "      <th>Operating System_Android</th>\n",
              "      <th>Operating System_iOS</th>\n",
              "      <th>Gender_Female</th>\n",
              "      <th>Gender_Male</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43a49d71-0169-4260-b34a-f75a016ba022')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-43a49d71-0169-4260-b34a-f75a016ba022 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-43a49d71-0169-4260-b34a-f75a016ba022');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5f9286db-0208-4971-bb60-54e927ba207b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5f9286db-0208-4971-bb60-54e927ba207b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5f9286db-0208-4971-bb60-54e927ba207b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "ohe_df",
              "summary": "{\n  \"name\": \"ohe_df\",\n  \"rows\": 700,\n  \"fields\": [\n    {\n      \"column\": \"Device Model_Google Pixel 5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.40241453959810186,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_OnePlus 9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3925814204388955,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_Samsung Galaxy S21\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.39258142043889466,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_Xiaomi Mi 11\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.40657783821111243,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_iPhone 12\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4065778382111125,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Operating System_Android\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4065778382111125,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Operating System_iOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4065778382111125,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender_Female\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49995707970291237,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender_Male\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49995707970291237,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_merged = pd.concat([df,ohe_df], axis=1).drop(columns=['Device Model','Operating System','Gender'])\n",
        "df_merged.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "id": "4xj1loUCseXt",
        "outputId": "fc2d606f-2d6d-442b-d97c-6081965aa425"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   User ID  App Usage Time (min/day)  Screen On Time (hours/day)  \\\n",
              "0        1                       393                         6.4   \n",
              "1        2                       268                         4.7   \n",
              "2        3                       154                         4.0   \n",
              "3        4                       239                         4.8   \n",
              "4        5                       187                         4.3   \n",
              "\n",
              "   Battery Drain (mAh/day)  Number of Apps Installed  Data Usage (MB/day)  \\\n",
              "0                     1872                        67                 1122   \n",
              "1                     1331                        42                  944   \n",
              "2                      761                        32                  322   \n",
              "3                     1676                        56                  871   \n",
              "4                     1367                        58                  988   \n",
              "\n",
              "   Age  User Behavior Class Age_Category Screen_Time  \\\n",
              "0   40                    4  Middle_Aged    Moderate   \n",
              "1   47                    3  Middle_Aged         Low   \n",
              "2   42                    2  Middle_Aged         Low   \n",
              "3   20                    3  Young Adult         Low   \n",
              "4   31                    3        Adult         Low   \n",
              "\n",
              "   Device Model_Google Pixel 5  Device Model_OnePlus 9  \\\n",
              "0                          1.0                     0.0   \n",
              "1                          0.0                     1.0   \n",
              "2                          0.0                     0.0   \n",
              "3                          1.0                     0.0   \n",
              "4                          0.0                     0.0   \n",
              "\n",
              "   Device Model_Samsung Galaxy S21  Device Model_Xiaomi Mi 11  \\\n",
              "0                              0.0                        0.0   \n",
              "1                              0.0                        0.0   \n",
              "2                              0.0                        1.0   \n",
              "3                              0.0                        0.0   \n",
              "4                              0.0                        0.0   \n",
              "\n",
              "   Device Model_iPhone 12  Operating System_Android  Operating System_iOS  \\\n",
              "0                     0.0                       1.0                   0.0   \n",
              "1                     0.0                       1.0                   0.0   \n",
              "2                     0.0                       1.0                   0.0   \n",
              "3                     0.0                       1.0                   0.0   \n",
              "4                     1.0                       0.0                   1.0   \n",
              "\n",
              "   Gender_Female  Gender_Male  \n",
              "0            0.0          1.0  \n",
              "1            1.0          0.0  \n",
              "2            0.0          1.0  \n",
              "3            0.0          1.0  \n",
              "4            1.0          0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-70f721a6-76cd-43d8-ae39-7f7358c78872\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>User ID</th>\n",
              "      <th>App Usage Time (min/day)</th>\n",
              "      <th>Screen On Time (hours/day)</th>\n",
              "      <th>Battery Drain (mAh/day)</th>\n",
              "      <th>Number of Apps Installed</th>\n",
              "      <th>Data Usage (MB/day)</th>\n",
              "      <th>Age</th>\n",
              "      <th>User Behavior Class</th>\n",
              "      <th>Age_Category</th>\n",
              "      <th>Screen_Time</th>\n",
              "      <th>Device Model_Google Pixel 5</th>\n",
              "      <th>Device Model_OnePlus 9</th>\n",
              "      <th>Device Model_Samsung Galaxy S21</th>\n",
              "      <th>Device Model_Xiaomi Mi 11</th>\n",
              "      <th>Device Model_iPhone 12</th>\n",
              "      <th>Operating System_Android</th>\n",
              "      <th>Operating System_iOS</th>\n",
              "      <th>Gender_Female</th>\n",
              "      <th>Gender_Male</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>393</td>\n",
              "      <td>6.4</td>\n",
              "      <td>1872</td>\n",
              "      <td>67</td>\n",
              "      <td>1122</td>\n",
              "      <td>40</td>\n",
              "      <td>4</td>\n",
              "      <td>Middle_Aged</td>\n",
              "      <td>Moderate</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>268</td>\n",
              "      <td>4.7</td>\n",
              "      <td>1331</td>\n",
              "      <td>42</td>\n",
              "      <td>944</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>Middle_Aged</td>\n",
              "      <td>Low</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>154</td>\n",
              "      <td>4.0</td>\n",
              "      <td>761</td>\n",
              "      <td>32</td>\n",
              "      <td>322</td>\n",
              "      <td>42</td>\n",
              "      <td>2</td>\n",
              "      <td>Middle_Aged</td>\n",
              "      <td>Low</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>239</td>\n",
              "      <td>4.8</td>\n",
              "      <td>1676</td>\n",
              "      <td>56</td>\n",
              "      <td>871</td>\n",
              "      <td>20</td>\n",
              "      <td>3</td>\n",
              "      <td>Young Adult</td>\n",
              "      <td>Low</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>187</td>\n",
              "      <td>4.3</td>\n",
              "      <td>1367</td>\n",
              "      <td>58</td>\n",
              "      <td>988</td>\n",
              "      <td>31</td>\n",
              "      <td>3</td>\n",
              "      <td>Adult</td>\n",
              "      <td>Low</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-70f721a6-76cd-43d8-ae39-7f7358c78872')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-70f721a6-76cd-43d8-ae39-7f7358c78872 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-70f721a6-76cd-43d8-ae39-7f7358c78872');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9bca0c3c-53b2-4786-bf8b-6090bbab0b5a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9bca0c3c-53b2-4786-bf8b-6090bbab0b5a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9bca0c3c-53b2-4786-bf8b-6090bbab0b5a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_merged",
              "summary": "{\n  \"name\": \"df_merged\",\n  \"rows\": 700,\n  \"fields\": [\n    {\n      \"column\": \"User ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202,\n        \"min\": 1,\n        \"max\": 700,\n        \"num_unique_values\": 700,\n        \"samples\": [\n          159,\n          501,\n          397\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"App Usage Time (min/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 177,\n        \"min\": 30,\n        \"max\": 598,\n        \"num_unique_values\": 387,\n        \"samples\": [\n          582,\n          402,\n          183\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Screen On Time (hours/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.068583910273257,\n        \"min\": 1.0,\n        \"max\": 12.0,\n        \"num_unique_values\": 108,\n        \"samples\": [\n          10.8,\n          1.4,\n          4.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Battery Drain (mAh/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 819,\n        \"min\": 302,\n        \"max\": 2993,\n        \"num_unique_values\": 628,\n        \"samples\": [\n          2597,\n          1632,\n          545\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Apps Installed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26,\n        \"min\": 10,\n        \"max\": 99,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          79,\n          67,\n          68\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data Usage (MB/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 640,\n        \"min\": 102,\n        \"max\": 2497,\n        \"num_unique_values\": 585,\n        \"samples\": [\n          839,\n          765,\n          1946\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 18,\n        \"max\": 59,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          56,\n          26,\n          57\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"User Behavior Class\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age_Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Young Adult\",\n          \"Senior\",\n          \"Middle_Aged\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Screen_Time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Low\",\n          \"Very High\",\n          \"Very Low\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_Google Pixel 5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.40241453959810186,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_OnePlus 9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3925814204388955,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_Samsung Galaxy S21\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.39258142043889466,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_Xiaomi Mi 11\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.40657783821111243,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_iPhone 12\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4065778382111125,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Operating System_Android\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4065778382111125,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Operating System_iOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4065778382111125,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender_Female\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49995707970291237,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender_Male\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49995707970291237,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = df_merged[['Screen On Time (hours/day)',\n",
        "       'Battery Drain (mAh/day)',\n",
        "       'Number of Apps Installed',\n",
        "       'Data Usage (MB/day)',\n",
        "       'Age','Device Model_OnePlus 9',\n",
        "        'Device Model_Samsung Galaxy S21','Device Model_Xiaomi Mi 11',\n",
        "        'Device Model_iPhone 12','Operating System_iOS',\n",
        "        'Gender_Female']]\n",
        "y = df_merged['App Usage Time (min/day)']"
      ],
      "metadata": {
        "id": "uUut4r1SuZUQ"
      },
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=12)"
      ],
      "metadata": {
        "id": "sj9kI9bVvC5i"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "scaler = StandardScaler()\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "X_test_scaled = scaler.transform(X_test)\n",
        "\n",
        "reg = LinearRegression()\n",
        "reg.fit(X_train,y_train)\n",
        "reg"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 91
        },
        "id": "jJKgcH8bvHnC",
        "outputId": "76745bf4-600f-426d-946f-de5d6e79b017"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-2 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-2 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-2 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-2 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-2 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-2 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-2 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-2 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-2 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_app_usage = X_test.iloc[:1]\n",
        "new_app_usage"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "pwQfyv65vR9W",
        "outputId": "d944f4d6-2e75-4de2-9327-4920a1439c75"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Screen On Time (hours/day)  Battery Drain (mAh/day)  \\\n",
              "150                         9.4                     2583   \n",
              "\n",
              "     Number of Apps Installed  Data Usage (MB/day)  Age  \\\n",
              "150                        92                 1539   21   \n",
              "\n",
              "     Device Model_OnePlus 9  Device Model_Samsung Galaxy S21  \\\n",
              "150                     0.0                              0.0   \n",
              "\n",
              "     Device Model_Xiaomi Mi 11  Device Model_iPhone 12  Operating System_iOS  \\\n",
              "150                        0.0                     1.0                   1.0   \n",
              "\n",
              "     Gender_Female  \n",
              "150            0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d5c6b8cb-e741-49ef-b239-95b099db5fa1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Screen On Time (hours/day)</th>\n",
              "      <th>Battery Drain (mAh/day)</th>\n",
              "      <th>Number of Apps Installed</th>\n",
              "      <th>Data Usage (MB/day)</th>\n",
              "      <th>Age</th>\n",
              "      <th>Device Model_OnePlus 9</th>\n",
              "      <th>Device Model_Samsung Galaxy S21</th>\n",
              "      <th>Device Model_Xiaomi Mi 11</th>\n",
              "      <th>Device Model_iPhone 12</th>\n",
              "      <th>Operating System_iOS</th>\n",
              "      <th>Gender_Female</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>150</th>\n",
              "      <td>9.4</td>\n",
              "      <td>2583</td>\n",
              "      <td>92</td>\n",
              "      <td>1539</td>\n",
              "      <td>21</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5c6b8cb-e741-49ef-b239-95b099db5fa1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d5c6b8cb-e741-49ef-b239-95b099db5fa1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d5c6b8cb-e741-49ef-b239-95b099db5fa1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "  <div id=\"id_cf00237e-2ad1-4d61-aa98-2386a06fc771\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('new_app_usage')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_cf00237e-2ad1-4d61-aa98-2386a06fc771 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('new_app_usage');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "new_app_usage",
              "summary": "{\n  \"name\": \"new_app_usage\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Screen On Time (hours/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 9.4,\n        \"max\": 9.4,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          9.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Battery Drain (mAh/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2583,\n        \"max\": 2583,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2583\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Apps Installed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 92,\n        \"max\": 92,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          92\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data Usage (MB/day)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1539,\n        \"max\": 1539,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1539\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 21,\n        \"max\": 21,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_OnePlus 9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_Samsung Galaxy S21\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_Xiaomi Mi 11\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Device Model_iPhone 12\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Operating System_iOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender_Female\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(reg.coef_)\n",
        "print(reg.intercept_)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xGyVZ33Uv5Ux",
        "outputId": "8a05eac6-561d-41fc-d331-5dc3b34523e3"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[ 13.48016377   0.05688681   1.97334926   0.05582354   0.04141207\n",
            "  -1.8666211  -11.45517587  -5.9109827   -4.74582474  -4.74582474\n",
            "   6.19186686]\n",
            "-36.4926858224361\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_app_usage1 = y_test.iloc[:1].values[0]\n",
        "print(f\"Real app usage  - {new_app_usage1}\")\n",
        "app_usage_prediction = reg.predict(new_app_usage)[0].round(2)\n",
        "print(f\"predicted app usage - {app_usage_prediction}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bwJs2u5yvZzp",
        "outputId": "422b5146-021f-414e-e072-51b9dc72731a"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Real app usage  - 523\n",
            "predicted app usage - 496.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "abs_error = new_app_usage1 - app_usage_prediction\n",
        "print(f\"the absolute error is {abs_error}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YRIr5dhtvh-K",
        "outputId": "6819e356-ce10-4241-f0cd-5ede5d8ca9ef"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "the absolute error is 27.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(f\"Score (R2) on Train set is {reg.score(X_train, y_train)}\")\n",
        "print(f\"Score (R2) on Test set is {reg.score(X_test, y_test)}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Bg3qd4KbvnCO",
        "outputId": "6e13df1c-402f-42a5-dcb8-fe546e78decd"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Score (R2) on Train set is 0.9459776788067397\n",
            "Score (R2) on Test set is 0.9381922568830919\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mean_abs_error = (y_pred - y_test).mean()\n",
        "mean_sqd_error = ((y_pred - y_test)** 2).mean()\n",
        "print(f\"The MAE is {mean_abs_error}\")\n",
        "print(f\"The MSE is {mean_sqd_error}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iQRpQ97evtUO",
        "outputId": "3a7047de-d881-4bba-992c-5f354c0f5d9f"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The MAE is 5.6430710458851685\n",
            "The MSE is 1820.1508143741694\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(np.var(y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YLW4n0jbv0C_",
        "outputId": "e10623e7-313e-4dfc-f8ae-9c8a9848881b"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "29937.87811224488\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "While one-hot encoding had a minor impact on the training R² score, it did not improve the test R² or reduce prediction errors (MAE and MSE). As such, one-hot encoding does not appear to significantly enhance the model's performance in this case."
      ],
      "metadata": {
        "id": "bWg7rvTzu5pw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Other Models - Random Forest\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "forest_reg = RandomForestRegressor()\n",
        "forest_reg.fit(X_train,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 91
        },
        "id": "8sEVW_90ccF8",
        "outputId": "6879e381-020c-4cd5-f95e-3913aa90026d"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomForestRegressor()"
            ],
            "text/html": [
              "<style>#sk-container-id-3 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-3 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-3 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-3 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-3 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-3 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-3 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-3 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-3 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-3 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomForestRegressor<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestRegressor.html\">?<span>Documentation for RandomForestRegressor</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestRegressor()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(f\"R2 score forest on train set is {forest_reg.score(X_train, y_train)}\")\n",
        "print(f\"R2 score forest on test set is {forest_reg.score(X_test, y_test)}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IuKZoyQ4cdqk",
        "outputId": "6c991dda-bf2a-4e04-9b6a-993abf33786a"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "R2 score forest on train set is 0.9938957839552082\n",
            "R2 score forest on test set is 0.9572494235209787\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculating Predictions\n",
        "y_pred_forest = forest_reg.predict(X_test)\n",
        "# Mean Absolute Error\n",
        "mean_abs_error = (y_pred_forest - y_test).mean()\n",
        "print(f\"The MAE forest is {mean_abs_error}\")\n",
        "mean_sqd_error = ((y_pred_forest - y_test) ** 2).mean()\n",
        "print(f\"The MSE forest is {mean_sqd_error}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vFuuSJ8Acfen",
        "outputId": "05e35f98-e422-42a9-a514-50fc7238eb33"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The MAE forest is 1.859214285714288\n",
            "The MSE forest is 1279.8615478571428\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The Random Forest model outperforms the linear regression in terms of both R² and error metrics (MAE and MSE). The high R² score on both the training and test sets, coupled with the relatively low error values, indicates that the Random Forest model is a strong candidate for this task and generalizes well to unseen data."
      ],
      "metadata": {
        "id": "PzRJ3X3evNqf"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Rk3NpleachTz"
      },
      "execution_count": 56,
      "outputs": []
    }
  ]
}